{"ast":null,"code":"var _jsxFileName = \"D:\\\\internSCC\\\\React\\\\todo-list\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TodoItem from './components/TodoItem';\nimport TodoInput from './components/TodoInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todoItems: []\n    };\n    this.onPressEnter = this.onPressEnter.bind(this);\n    this.chooseAll = this.chooseAll.bind(this);\n  }\n\n  onItemClicked(item) {\n    return () => {\n      const isCompleted = item.isCompleted;\n      const {\n        todoItems\n      } = this.state;\n      const index = todoItems.indexOf(item);\n      this.setState({\n        todoItems: [...todoItems.slice(0, index), { ...item,\n          isCompleted: !isCompleted\n        }, ...todoItems.slice(index + 1)]\n      });\n    };\n  }\n\n  onDoubleClick(item) {\n    return () => {\n      const {\n        todoItems\n      } = this.state;\n      const index = todoItems.indexOf(item);\n      this.setState({\n        todoItems: [...todoItems.slice(0, index), { ...item,\n          isEditing: true,\n          isCompleted: item.isCompleted\n        }, ...todoItems.slice(index + 1)]\n      });\n    };\n  }\n\n  onChange(event, item) {\n    return event => {\n      var text = event.target.value;\n      const isCompleted = item.isCompleted;\n      const {\n        todoItems\n      } = this.state;\n      const index = todoItems.indexOf(item);\n      this.setState({\n        todoItems: [...todoItems.slice(0, index), {\n          title: text,\n          isEditing: false,\n          isCompleted: isCompleted\n        }, ...todoItems.slice(index + 1)]\n      });\n    };\n  }\n\n  onPressEnter(event) {\n    if (event.key === 'Enter') {\n      var {\n        todoItems\n      } = this.state;\n      todoItems.push({\n        title: event.target.value,\n        isEditing: false,\n        isCompleted: false\n      });\n      this.setState({\n        todoItems: todoItems\n      });\n      event.target.value = \"\";\n    }\n  }\n\n  chooseAll() {\n    var {\n      todoItems\n    } = this.state;\n    let count = 0;\n\n    for (let item of todoItems) {\n      if (item.isCompleted === true) {\n        count++;\n      }\n    }\n\n    if (count === todoItems.length) {\n      for (let item of todoItems) {\n        item.isCompleted = false;\n      }\n    } else {\n      for (let item of todoItems) {\n        item.isCompleted = true;\n      }\n    }\n\n    var newState = {\n      todoItems: todoItems\n    };\n    this.setState(newState);\n  }\n\n  render() {\n    const {\n      todoItems\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoInput, {\n        onKeyUp: this.onPressEnter,\n        chooseAll: this.chooseAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), todoItems.map((item, index) => /*#__PURE__*/_jsxDEV(TodoItem, {\n        item: item,\n        onClick: this.onItemClicked(item),\n        onDoubleClick: this.onDoubleClick(item),\n        onChange: event => this.onChange(event, item)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/internSCC/React/todo-list/src/App.js"],"names":["React","Component","TodoItem","TodoInput","App","constructor","state","todoItems","onPressEnter","bind","chooseAll","onItemClicked","item","isCompleted","index","indexOf","setState","slice","onDoubleClick","isEditing","onChange","event","text","target","value","title","key","push","count","length","newState","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TodoItem from './components/TodoItem';\nimport TodoInput from './components/TodoInput';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { todoItems: []};\n    this.onPressEnter = this.onPressEnter.bind(this);\n    this.chooseAll = this.chooseAll.bind(this);\n  }\n\n  onItemClicked(item) {\n    return() => {\n      const isCompleted = item.isCompleted;\n      const { todoItems } = this.state;\n      const index = todoItems.indexOf(item);\n      this.setState({ todoItems: [\n        ...todoItems.slice(0, index),\n        { \n          ...item, \n          isCompleted: !isCompleted \n        },\n        ...todoItems.slice(index + 1)\n      ]});\n    }\n  }\n\n  onDoubleClick(item) {\n    return() => {\n      const { todoItems } = this.state;\n      const index = todoItems.indexOf(item);\n      this.setState({ todoItems: [\n        ...todoItems.slice(0, index),\n        { \n          ...item, \n          isEditing: true, \n          isCompleted: item.isCompleted\n        },\n        ...todoItems.slice(index + 1)\n      ]});\n    }\n  }\n\n  onChange(event, item) {\n    return(event) => {\n      var text = event.target.value;\n      const isCompleted = item.isCompleted;\n      const { todoItems } = this.state;\n      const index = todoItems.indexOf(item);\n      this.setState({ todoItems: [\n        ...todoItems.slice(0, index),\n        { \n          title: text,\n          isEditing: false, \n          isCompleted: isCompleted \n        },\n        ...todoItems.slice(index + 1)\n      ]});\n    }\n  }\n\n  onPressEnter(event) {\n    if(event.key === 'Enter') {\n        var { todoItems } = this.state;\n        \n        todoItems.push({\n            title: event.target.value, \n            isEditing: false,\n            isCompleted: false\n        });\n        this.setState({todoItems: todoItems});\n        event.target.value = \"\";\n    }        \n  } \n\n  chooseAll() {\n    var { todoItems } = this.state;\n    let count = 0\n    for(let item of todoItems) {\n      if(item.isCompleted === true) {\n        count++;\n      }\n    }\n    if(count === todoItems.length) {\n      for(let item of todoItems) {\n        item.isCompleted = false;\n      }\n    } else {\n      for(let item of todoItems) {\n        item.isCompleted = true;\n      }\n    }\n\n    var newState = {todoItems: todoItems};\n\n    this.setState(newState);\n  }\n\n  render() {\n    const { todoItems } = this.state;\n \n    return (\n      <div className=\"App\"> \n        <h1>todos</h1>\n        <TodoInput onKeyUp={this.onPressEnter} chooseAll={this.chooseAll}/>\n        {\n          todoItems.map((item, index) => \n            <TodoItem \n            key={index} \n            item={item} \n            onClick={this.onItemClicked(item)}\n            onDoubleClick={this.onDoubleClick(item)}\n            onChange={(event) => this.onChange(event, item)}/>)\n        }\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}