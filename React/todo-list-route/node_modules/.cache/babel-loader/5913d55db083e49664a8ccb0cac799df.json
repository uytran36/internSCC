{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\todo-list-route\\\\src\\\\components\\\\TodoNew.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport \"./TodoNew.css\";\nimport axios from \"axios\";\nimport { Table, Tag, Space, Button, Input, Row, Col } from \"antd\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport EditModal from \"./EditModal\";\nimport AddModal from \"./AddModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoNew() {\n  _s();\n\n  const [todoItems, setTodo] = useState([]);\n  const [editVisible, setEditVisible] = useState(false);\n  const [addVisible, setAddVisible] = useState(false);\n  const [todoItem, setItem] = useState({});\n  useEffect(() => {\n    axios.get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\").then(res => {\n      setTodo(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //search todo\n\n  const {\n    Search\n  } = Input;\n\n  const onSearch = value => {\n    axios.get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\").then(res => {\n      let listItem = res.data;\n      listItem = listItem.filter(item => item.title.includes(value));\n      setTodo(listItem);\n      console.log(listItem);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //click edit\n\n\n  const onClickEdit = item => {\n    setItem(item);\n    setEditVisible(true);\n  };\n\n  const getEditUpdate = () => {\n    axios.get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\").then(res => {\n      setTodo(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n    setEditVisible(false);\n  }; //click add\n\n\n  const onClickAdd = () => {\n    setAddVisible(true);\n  };\n\n  const getAddUpdate = () => {\n    axios.get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\").then(res => {\n      setTodo(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n    setAddVisible(false);\n  };\n\n  const setVisibleFalse = () => {\n    setEditVisible(false);\n    set;\n  }; //click delete\n\n\n  const findIndex = (todoList, item) => {\n    for (let i = 0; i < todoList.length; i++) {\n      if (todoList[i].id === item.id) {\n        return i;\n      }\n    }\n  };\n\n  const onClickDelete = item => {\n    const temp = todoItems;\n    const index = findIndex(temp, item);\n    setTodo([...todoItems.slice(0, index), ...todoItems.slice(index + 1)]);\n    axios.delete(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" + item.id).then(response => {\n      console.log(response);\n    });\n  }; //define table\n\n\n  const columns = [{\n    title: \"id\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Title\",\n    dataIndex: \"title\",\n    key: \"title\"\n  }, {\n    title: \"Is editing?\",\n    dataIndex: \"isEditing\",\n    key: \"isEditing\",\n    render: isEditing => {\n      let color;\n\n      if (isEditing === \"false\" || isEditing === false) {\n        color = \"volcano\";\n      }\n\n      if (isEditing === \"true\" || isEditing === true) {\n        color = \"green\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: isEditing.toString().toUpperCase()\n      }, isEditing, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: \"Is complete?\",\n    dataIndex: \"isCompleted\",\n    key: \"isCompleted\",\n    render: isCompleted => {\n      let color;\n\n      if (isCompleted === \"false\" || isCompleted === false) {\n        color = \"volcano\";\n      }\n\n      if (isCompleted === \"true\" || isCompleted === true) {\n        color = \"green\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: isCompleted.toString().toUpperCase()\n      }, isCompleted, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(EditTwoTone, {\n        className: \"edit-button\",\n        onClick: () => onClickEdit(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteTwoTone, {\n        className: \"delete\",\n        onClick: () => onClickDelete(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)\n  }]; //define data for table\n\n  const data = todoItems;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoNew\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          className: \"searchTxb\",\n          placeholder: \"input search text\",\n          allowClear: true,\n          enterButton: \"Search\",\n          size: \"large\",\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        className: \"addButton\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          size: \"large\",\n          onClick: onClickAdd,\n          children: \"+Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditModal, {\n      visible: editVisible,\n      todoItem: todoItem,\n      getEditUpdate: getEditUpdate,\n      setVisibleFalse: setVisibleFalse\n    }, editVisible, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddModal, {\n      visible: addVisible,\n      getAddUpdate: getAddUpdate\n    }, addVisible, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoNew, \"HuN7VKd56RVKyTUwpX8pNYXWcRY=\");\n\n_c = TodoNew;\nexport default TodoNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoNew\");","map":{"version":3,"sources":["D:/react/todo-list-route/src/components/TodoNew.js"],"names":["React","useEffect","useState","axios","Table","Tag","Space","Button","Input","Row","Col","EditTwoTone","DeleteTwoTone","EditModal","AddModal","TodoNew","todoItems","setTodo","editVisible","setEditVisible","addVisible","setAddVisible","todoItem","setItem","get","then","res","data","catch","err","console","log","Search","onSearch","value","listItem","filter","item","title","includes","onClickEdit","getEditUpdate","onClickAdd","getAddUpdate","setVisibleFalse","set","findIndex","todoList","i","length","id","onClickDelete","temp","index","slice","delete","response","columns","dataIndex","key","render","isEditing","color","toString","toUpperCase","isCompleted","text","record"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport \"./TodoNew.css\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space, Button, Input, Row, Col } from \"antd\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\n\r\nimport EditModal from \"./EditModal\";\r\nimport AddModal from \"./AddModal\";\r\n\r\n\r\n\r\nfunction TodoNew() {\r\n  const [todoItems, setTodo] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [addVisible, setAddVisible] = useState(false);\r\n  const [todoItem, setItem] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n      .then((res) => {\r\n        setTodo(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //search todo\r\n  const { Search } = Input;\r\n  const onSearch = (value) => {\r\n    axios\r\n      .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n      .then((res) => {\r\n        let listItem = res.data;\r\n        listItem = listItem.filter((item) => item.title.includes(value));\r\n        setTodo(listItem);\r\n        console.log(listItem);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  //click edit\r\n  const onClickEdit = (item) => {\r\n    setItem(item);\r\n    setEditVisible(true);\r\n  };\r\n\r\n  const getEditUpdate = () => {\r\n    axios\r\n      .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n      .then((res) => {\r\n        setTodo(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setEditVisible(false);\r\n  };\r\n\r\n  //click add\r\n  const onClickAdd = () => {\r\n    setAddVisible(true);\r\n  };\r\n  const getAddUpdate = () => {\r\n    axios\r\n      .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n      .then((res) => {\r\n        setTodo(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setAddVisible(false);\r\n  };\r\n\r\n  const setVisibleFalse = () => {\r\n    setEditVisible(false);\r\n    set\r\n  }\r\n  //click delete\r\n  const findIndex = (todoList, item) => {\r\n    for (let i = 0; i < todoList.length; i++) {\r\n      if (todoList[i].id === item.id) {\r\n        return i;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickDelete = (item) => {\r\n    const temp = todoItems;\r\n\r\n    const index = findIndex(temp, item);\r\n    setTodo([...todoItems.slice(0, index), ...todoItems.slice(index + 1)]);\r\n\r\n    axios\r\n      .delete(\r\n        \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\r\n          item.id\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  };\r\n\r\n  //define table\r\n  const columns = [\r\n    {\r\n      title: \"id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n    },\r\n    {\r\n      title: \"Is editing?\",\r\n      dataIndex: \"isEditing\",\r\n      key: \"isEditing\",\r\n      render: (isEditing) => {\r\n        let color;\r\n        if (isEditing === \"false\" || isEditing === false) {\r\n          color = \"volcano\";\r\n        }\r\n        if (isEditing === \"true\" || isEditing === true) {\r\n          color = \"green\";\r\n        }\r\n        return (\r\n          <Tag color={color} key={isEditing}>\r\n            {isEditing.toString().toUpperCase()}\r\n          </Tag>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Is complete?\",\r\n      dataIndex: \"isCompleted\",\r\n      key: \"isCompleted\",\r\n      render: (isCompleted) => {\r\n        let color;\r\n        if (isCompleted === \"false\" || isCompleted === false) {\r\n          color = \"volcano\";\r\n        }\r\n        if (isCompleted === \"true\" || isCompleted === true) {\r\n          color = \"green\";\r\n        }\r\n        return (\r\n          <Tag color={color} key={isCompleted}>\r\n            {isCompleted.toString().toUpperCase()}\r\n          </Tag>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <EditTwoTone\r\n            className=\"edit-button\"\r\n            onClick={() => onClickEdit(record)}\r\n          />\r\n          <DeleteTwoTone\r\n            className=\"delete\"\r\n            onClick={() => onClickDelete(record)}\r\n          />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //define data for table\r\n  const data = todoItems;\r\n\r\n  return (\r\n    <div className=\"TodoNew\">\r\n      <Row>\r\n        <Col span={6}>\r\n          <Search\r\n            className=\"searchTxb\"\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            enterButton=\"Search\"\r\n            size=\"large\"\r\n            onSearch={onSearch}\r\n          />\r\n        </Col>\r\n        <Col span={6}></Col>\r\n        <Col span={6}></Col>\r\n        <Col span={6} className=\"addButton\">\r\n          <Button type=\"primary\" size=\"large\" onClick={onClickAdd}>\r\n            +Add\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Table columns={columns} dataSource={data} />\r\n      <EditModal\r\n        key={editVisible}\r\n        visible={editVisible}\r\n        todoItem={todoItem}\r\n        getEditUpdate={getEditUpdate}\r\n        setVisibleFalse={setVisibleFalse}\r\n      />\r\n      <AddModal\r\n        key={addVisible}\r\n        visible={addVisible}\r\n        getAddUpdate={getAddUpdate}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoNew;\r\n"]},"metadata":{},"sourceType":"module"}