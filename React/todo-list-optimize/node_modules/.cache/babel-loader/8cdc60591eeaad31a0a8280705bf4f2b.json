{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\todo-list-route\\\\src\\\\components\\\\TodoNew.js\";\nimport { React, Component } from \"react\";\nimport \"./TodoOld.css\";\nimport axios from \"axios\";\nimport { Table, Tag, Space } from \"antd\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoNew extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todoItems: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\").then(res => {\n      this.setState({\n        todoItems: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: \"id\",\n      dataIndex: \"id\",\n      key: \"id\"\n    }, {\n      title: \"Title\",\n      dataIndex: \"title\",\n      key: \"title\"\n    }, {\n      title: \"Is editing?\",\n      key: \"isEditing\",\n      dataIndex: \"isEditing\",\n      render: isEditing => {\n        let color;\n\n        if (isEditing === \"false\") {\n          color = \"volcano\";\n        }\n\n        if (isEditing === \"true\") {\n          color = \"green\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          color: color,\n          children: isEditing.toUpperCase()\n        }, isEditing, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      }\n    }, {\n      title: \"Is complete?\",\n      key: \"isComplete\",\n      dataIndex: \"isComplete\",\n      render: isComplete => {\n        let color;\n\n        if (isComplete === \"false\") {\n          color = \"volcano\";\n        }\n\n        if (isComplete === \"true\") {\n          color = \"green\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          color: color,\n          children: tag.toUpperCase()\n        }, isComplete, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this);\n      }\n    }, {\n      title: \"Action\",\n      key: \"action\",\n      render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n        size: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(EditTwoTone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteTwoTone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }];\n    const data = [{\n      id: \"1\",\n      title: \"John Brown\",\n      isEditing: \"false\",\n      isCompelte: \"true\"\n    }, {\n      id: \"2\",\n      title: \"Joe Mama\",\n      isEditing: \"false\",\n      isCompelte: \"true\"\n    }, {\n      id: \"3\",\n      title: \"Tommy Teo\",\n      isEditing: \"false\",\n      isCompelte: \"true\"\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoNew\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoNew;","map":{"version":3,"sources":["D:/react/todo-list-route/src/components/TodoNew.js"],"names":["React","Component","axios","Table","Tag","Space","EditTwoTone","DeleteTwoTone","TodoNew","constructor","state","todoItems","componentDidMount","get","then","res","setState","data","catch","err","console","log","render","columns","title","dataIndex","key","isEditing","color","toUpperCase","isComplete","tag","text","record","id","isCompelte"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,QAAkC,MAAlC;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,mBAA3C;;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC9BQ,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,KAAK,CACFW,GADH,CACO,8DADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,WAAKC,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAEI,GAAG,CAACE;AAAjB,OAAd;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CACd;AACEC,MAAAA,KAAK,EAAE,IADT;AAEEC,MAAAA,SAAS,EAAE,IAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KADc,EAMd;AACEF,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,SAAS,EAAE,OAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KANc,EAWd;AACEF,MAAAA,KAAK,EAAE,aADT;AAEEE,MAAAA,GAAG,EAAE,WAFP;AAGED,MAAAA,SAAS,EAAE,WAHb;AAIEH,MAAAA,MAAM,EAAGK,SAAD,IAAe;AACrB,YAAIC,KAAJ;;AACA,YAAID,SAAS,KAAK,OAAlB,EAA2B;AACzBC,UAAAA,KAAK,GAAG,SAAR;AACD;;AACD,YAAID,SAAS,KAAK,MAAlB,EAA0B;AACxBC,UAAAA,KAAK,GAAG,OAAR;AACD;;AACD,4BACE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAEA,KAAZ;AAAA,oBACGD,SAAS,CAACE,WAAV;AADH,WAAwBF,SAAxB;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AAjBH,KAXc,EA8Bd;AACEH,MAAAA,KAAK,EAAE,cADT;AAEEE,MAAAA,GAAG,EAAE,YAFP;AAGED,MAAAA,SAAS,EAAE,YAHb;AAIEH,MAAAA,MAAM,EAAGQ,UAAD,IAAgB;AACtB,YAAIF,KAAJ;;AACA,YAAIE,UAAU,KAAK,OAAnB,EAA4B;AAC1BF,UAAAA,KAAK,GAAG,SAAR;AACD;;AACD,YAAIE,UAAU,KAAK,MAAnB,EAA2B;AACzBF,UAAAA,KAAK,GAAG,OAAR;AACD;;AACD,4BACE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAEA,KAAZ;AAAA,oBACGG,GAAG,CAACF,WAAJ;AADH,WAAwBC,UAAxB;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AAjBH,KA9Bc,EAiDd;AACEN,MAAAA,KAAK,EAAE,QADT;AAEEE,MAAAA,GAAG,EAAE,QAFP;AAGEJ,MAAAA,MAAM,EAAE,CAACU,IAAD,EAAOC,MAAP,kBACN,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,gCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,KAjDc,CAAhB;AA6DA,UAAMhB,IAAI,GAAG,CACX;AACEiB,MAAAA,EAAE,EAAE,GADN;AAEEV,MAAAA,KAAK,EAAE,YAFT;AAGEG,MAAAA,SAAS,EAAE,OAHb;AAIEQ,MAAAA,UAAU,EAAE;AAJd,KADW,EAOX;AACED,MAAAA,EAAE,EAAE,GADN;AAEEV,MAAAA,KAAK,EAAE,UAFT;AAGEG,MAAAA,SAAS,EAAE,OAHb;AAIEQ,MAAAA,UAAU,EAAE;AAJd,KAPW,EAaX;AACED,MAAAA,EAAE,EAAE,GADN;AAEEV,MAAAA,KAAK,EAAE,WAFT;AAGEG,MAAAA,SAAS,EAAE,OAHb;AAIEQ,MAAAA,UAAU,EAAE;AAJd,KAbW,CAAb;AAoBA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEZ,OAAhB;AAAyB,QAAA,UAAU,EAAEN;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAzG6B;;AA4GhC,eAAeT,OAAf","sourcesContent":["import { React, Component } from \"react\";\r\nimport \"./TodoOld.css\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\n\r\nclass TodoNew extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { todoItems: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n      .then((res) => {\r\n        this.setState({ todoItems: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"id\",\r\n        dataIndex: \"id\",\r\n        key: \"id\",\r\n      },\r\n      {\r\n        title: \"Title\",\r\n        dataIndex: \"title\",\r\n        key: \"title\",\r\n      },\r\n      {\r\n        title: \"Is editing?\",\r\n        key: \"isEditing\",\r\n        dataIndex: \"isEditing\",\r\n        render: (isEditing) => {\r\n          let color;\r\n          if (isEditing === \"false\") {\r\n            color = \"volcano\";\r\n          }\r\n          if (isEditing === \"true\") {\r\n            color = \"green\";\r\n          }\r\n          return (\r\n            <Tag color={color} key={isEditing}>\r\n              {isEditing.toUpperCase()}\r\n            </Tag>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"Is complete?\",\r\n        key: \"isComplete\",\r\n        dataIndex: \"isComplete\",\r\n        render: (isComplete) => {\r\n          let color;\r\n          if (isComplete === \"false\") {\r\n            color = \"volcano\";\r\n          }\r\n          if (isComplete === \"true\") {\r\n            color = \"green\";\r\n          }\r\n          return (\r\n            <Tag color={color} key={isComplete}>\r\n              {tag.toUpperCase()}\r\n            </Tag>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"action\",\r\n        render: (text, record) => (\r\n          <Space size=\"middle\">\r\n            <EditTwoTone />\r\n            <DeleteTwoTone />\r\n          </Space>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const data = [\r\n      {\r\n        id: \"1\",\r\n        title: \"John Brown\",\r\n        isEditing: \"false\",\r\n        isCompelte: \"true\",\r\n      },\r\n      {\r\n        id: \"2\",\r\n        title: \"Joe Mama\",\r\n        isEditing: \"false\",\r\n        isCompelte: \"true\",\r\n      },\r\n      {\r\n        id: \"3\",\r\n        title: \"Tommy Teo\",\r\n        isEditing: \"false\",\r\n        isCompelte: \"true\",\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"TodoNew\">\r\n        <Table columns={columns} dataSource={data} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoNew;\r\n"]},"metadata":{},"sourceType":"module"}