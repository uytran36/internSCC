{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\todo-list-optimize\\\\src\\\\components\\\\Paging.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport \"./TodoNew.css\";\nimport axios from \"axios\";\nimport { Table, Tag, Space, Button, Input, Row, Col } from \"antd\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport EditModal from \"./EditModal\";\nimport AddModal from \"./AddModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Paging() {\n  _s();\n\n  const [contacts, setContacts] = useState([]);\n  const [editVisible, setEditVisible] = useState(false);\n  const [addVisible, setAddVisible] = useState(false);\n  const [contact, setContact] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://gateway.smartcontactcenter.xyz/smart-contact-center-contact-list-management/api/v1/omni-contact-list-normalizations\", {\n      params: {\n        _limit: 10,\n        _offset: 0\n      }\n    }).then(res => {\n      setContacts(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //search todo\n\n  const {\n    Search\n  } = Input;\n\n  const onSearch = value => {\n    if (value !== \"\") {\n      let listSearch = [];\n\n      for (let item of todoItems) {\n        if (item.title.includes(value)) {\n          listSearch.push(item);\n        }\n      }\n\n      setTodo(listSearch);\n    } else {\n      axios.get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\").then(res => {\n        setTodo(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }; //click edit\n\n\n  const onClickEdit = item => {\n    setItem(item);\n    setEditVisible(true);\n  };\n\n  const getEditUpdate = item => {\n    const index = findIndex(todoItems, item);\n    setTodo([...todoItems.slice(0, index), {\n      id: item.id,\n      title: item.title,\n      isEditing: item.isEditing,\n      isCompleted: item.isCompleted\n    }, ...todoItems.slice(index + 1)]);\n    setEditVisible(false);\n  }; //click add\n\n\n  const onClickAdd = () => {\n    setAddVisible(true);\n  };\n\n  const getAddUpdate = item => {\n    setTodo([...todoItems.slice(0, todoItems.length), {\n      id: todoItems.length + 1,\n      title: item.title,\n      isEditing: item.isEditing,\n      isCompleted: item.isCompleted\n    }]);\n    setAddVisible(false);\n  };\n\n  const setVisibleFalse = () => {\n    setEditVisible(false);\n    setAddVisible(false);\n  }; //click delete\n\n\n  const findIndex = (todoList, item) => {\n    for (let i = 0; i < todoList.length; i++) {\n      if (todoList[i].id === item.id) {\n        return i;\n      }\n    }\n  };\n\n  const onClickDelete = item => {\n    const temp = todoItems;\n    const index = findIndex(temp, item);\n    setTodo([...todoItems.slice(0, index), ...todoItems.slice(index + 1)]);\n    axios.delete(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" + item.id).then(response => {\n      console.log(response);\n    });\n  }; //define table\n\n\n  const columns = [{\n    title: \"id\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Title\",\n    dataIndex: \"ho_va_ten\",\n    key: \"ho_va_ten\"\n  }, {\n    title: \"Is editing?\",\n    dataIndex: \"sdt\",\n    key: \"sdt\"\n  }, {\n    title: \"Is complete?\",\n    dataIndex: \"gender\",\n    key: \"gender\",\n    render: isCompleted => {\n      let color;\n\n      if (isCompleted === \"male\") {\n        color = \"volcano\";\n      }\n\n      if (isCompleted === \"female\") {\n        color = \"green\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: isCompleted.toString().toUpperCase()\n      }, isCompleted, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(EditTwoTone, {\n        className: \"edit-button\",\n        onClick: () => onClickEdit(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteTwoTone, {\n        className: \"delete\",\n        onClick: () => onClickDelete(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)\n  }]; //define data for table\n\n  const data = todoItems;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoNew\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          className: \"searchTxb\",\n          placeholder: \"input search text\",\n          allowClear: true,\n          enterButton: \"Search\",\n          size: \"large\",\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        className: \"addButton\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          size: \"large\",\n          onClick: onClickAdd,\n          children: \"+Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditModal, {\n      visible: editVisible,\n      todoItem: todoItem,\n      getEditUpdate: getEditUpdate,\n      setVisibleFalse: setVisibleFalse\n    }, editVisible, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddModal, {\n      visible: addVisible,\n      getAddUpdate: getAddUpdate,\n      setVisibleFalse: setVisibleFalse\n    }, addVisible, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Paging, \"UMIu2rPYZSIa0A213UkiTCV7O4M=\");\n\n_c = Paging;\nexport default Paging;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paging\");","map":{"version":3,"sources":["D:/react/todo-list-optimize/src/components/Paging.js"],"names":["React","useEffect","useState","axios","Table","Tag","Space","Button","Input","Row","Col","EditTwoTone","DeleteTwoTone","EditModal","AddModal","Paging","contacts","setContacts","editVisible","setEditVisible","addVisible","setAddVisible","contact","setContact","get","params","_limit","_offset","then","res","data","catch","err","console","log","Search","onSearch","value","listSearch","item","todoItems","title","includes","push","setTodo","onClickEdit","setItem","getEditUpdate","index","findIndex","slice","id","isEditing","isCompleted","onClickAdd","getAddUpdate","length","setVisibleFalse","todoList","i","onClickDelete","temp","delete","response","columns","dataIndex","key","render","color","toString","toUpperCase","text","record","todoItem"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,KAApC,EAA2CC,GAA3C,EAAgDC,GAAhD,QAA2D,MAA3D;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,mBAA3C;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFqB,GADH,CAEI,6HAFJ,EAGI;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE,EADF;AAENC,QAAAA,OAAO,EAAE;AAFH;AADV,KAHJ,EAUGC,IAVH,CAUSC,GAAD,IAAS;AACbZ,MAAAA,WAAW,CAACY,GAAG,CAACC,IAAL,CAAX;AACD,KAZH,EAaGC,KAbH,CAaUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAfH;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT,CANgB,CAyBhB;;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAa3B,KAAnB;;AAEA,QAAM4B,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAIA,KAAK,KAAK,EAAd,EAAkB;AAChB,UAAIC,UAAU,GAAG,EAAjB;;AACA,WAAK,IAAIC,IAAT,IAAiBC,SAAjB,EAA4B;AAC1B,YAAID,IAAI,CAACE,KAAL,CAAWC,QAAX,CAAoBL,KAApB,CAAJ,EAAgC;AAC9BC,UAAAA,UAAU,CAACK,IAAX,CAAgBJ,IAAhB;AACD;AACF;;AACDK,MAAAA,OAAO,CAACN,UAAD,CAAP;AACD,KARD,MAQO;AACLnC,MAAAA,KAAK,CACFqB,GADH,CACO,8DADP,EAEGI,IAFH,CAESC,GAAD,IAAS;AACbe,QAAAA,OAAO,CAACf,GAAG,CAACC,IAAL,CAAP;AACD,OAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAPH;AAQD;AACF,GAnBD,CA5BgB,CAiDhB;;;AACA,QAAMa,WAAW,GAAIN,IAAD,IAAU;AAC5BO,IAAAA,OAAO,CAACP,IAAD,CAAP;AACApB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;;AAKA,QAAM4B,aAAa,GAAIR,IAAD,IAAU;AAC9B,UAAMS,KAAK,GAAGC,SAAS,CAACT,SAAD,EAAYD,IAAZ,CAAvB;AAEAK,IAAAA,OAAO,CAAC,CACN,GAAGJ,SAAS,CAACU,KAAV,CAAgB,CAAhB,EAAmBF,KAAnB,CADG,EAEN;AACEG,MAAAA,EAAE,EAAEZ,IAAI,CAACY,EADX;AAEEV,MAAAA,KAAK,EAAEF,IAAI,CAACE,KAFd;AAGEW,MAAAA,SAAS,EAAEb,IAAI,CAACa,SAHlB;AAIEC,MAAAA,WAAW,EAAEd,IAAI,CAACc;AAJpB,KAFM,EAQN,GAAGb,SAAS,CAACU,KAAV,CAAgBF,KAAK,GAAG,CAAxB,CARG,CAAD,CAAP;AAUA7B,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAdD,CAvDgB,CAuEhB;;;AACA,QAAMmC,UAAU,GAAG,MAAM;AACvBjC,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,QAAMkC,YAAY,GAAIhB,IAAD,IAAU;AAC7BK,IAAAA,OAAO,CAAC,CACN,GAAGJ,SAAS,CAACU,KAAV,CAAgB,CAAhB,EAAmBV,SAAS,CAACgB,MAA7B,CADG,EAEN;AACEL,MAAAA,EAAE,EAAEX,SAAS,CAACgB,MAAV,GAAmB,CADzB;AAEEf,MAAAA,KAAK,EAAEF,IAAI,CAACE,KAFd;AAGEW,MAAAA,SAAS,EAAEb,IAAI,CAACa,SAHlB;AAIEC,MAAAA,WAAW,EAAEd,IAAI,CAACc;AAJpB,KAFM,CAAD,CAAP;AASAhC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAXD;;AAaA,QAAMoC,eAAe,GAAG,MAAM;AAC5BtC,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD,CAzFgB,CA8FhB;;;AACA,QAAM4B,SAAS,GAAG,CAACS,QAAD,EAAWnB,IAAX,KAAoB;AACpC,SAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACF,MAA7B,EAAqCG,CAAC,EAAtC,EAA0C;AACxC,UAAID,QAAQ,CAACC,CAAD,CAAR,CAAYR,EAAZ,KAAmBZ,IAAI,CAACY,EAA5B,EAAgC;AAC9B,eAAOQ,CAAP;AACD;AACF;AACF,GAND;;AAQA,QAAMC,aAAa,GAAIrB,IAAD,IAAU;AAC9B,UAAMsB,IAAI,GAAGrB,SAAb;AAEA,UAAMQ,KAAK,GAAGC,SAAS,CAACY,IAAD,EAAOtB,IAAP,CAAvB;AACAK,IAAAA,OAAO,CAAC,CAAC,GAAGJ,SAAS,CAACU,KAAV,CAAgB,CAAhB,EAAmBF,KAAnB,CAAJ,EAA+B,GAAGR,SAAS,CAACU,KAAV,CAAgBF,KAAK,GAAG,CAAxB,CAAlC,CAAD,CAAP;AAEA7C,IAAAA,KAAK,CACF2D,MADH,CAEI,kEACEvB,IAAI,CAACY,EAHX,EAKGvB,IALH,CAKSmC,QAAD,IAAc;AAClB9B,MAAAA,OAAO,CAACC,GAAR,CAAY6B,QAAZ;AACD,KAPH;AAQD,GAdD,CAvGgB,CAuHhB;;;AACA,QAAMC,OAAO,GAAG,CACd;AACEvB,IAAAA,KAAK,EAAE,IADT;AAEEwB,IAAAA,SAAS,EAAE,IAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADc,EAMd;AACEzB,IAAAA,KAAK,EAAE,OADT;AAEEwB,IAAAA,SAAS,EAAE,WAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GANc,EAWd;AACEzB,IAAAA,KAAK,EAAE,aADT;AAEEwB,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAXc,EAgBd;AACEzB,IAAAA,KAAK,EAAE,cADT;AAEEwB,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,GAAG,EAAE,QAHP;AAIEC,IAAAA,MAAM,EAAGd,WAAD,IAAiB;AACvB,UAAIe,KAAJ;;AACA,UAAIf,WAAW,KAAK,MAApB,EAA4B;AAC1Be,QAAAA,KAAK,GAAG,SAAR;AACD;;AACD,UAAIf,WAAW,KAAK,QAApB,EAA8B;AAC5Be,QAAAA,KAAK,GAAG,OAAR;AACD;;AACD,0BACE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAEA,KAAZ;AAAA,kBACGf,WAAW,CAACgB,QAAZ,GAAuBC,WAAvB;AADH,SAAwBjB,WAAxB;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AAjBH,GAhBc,EAmCd;AACEZ,IAAAA,KAAK,EAAE,QADT;AAEEyB,IAAAA,GAAG,EAAE,QAFP;AAGEC,IAAAA,MAAM,EAAE,CAACI,IAAD,EAAOC,MAAP,kBACN,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,OAAO,EAAE,MAAM3B,WAAW,CAAC2B,MAAD;AAF5B;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,aAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE,MAAMZ,aAAa,CAACY,MAAD;AAF9B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,GAnCc,CAAhB,CAxHgB,CA6KhB;;AACA,QAAM1C,IAAI,GAAGU,SAAb;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,WAAW,EAAC,mBAFd;AAGE,UAAA,UAAU,MAHZ;AAIE,UAAA,WAAW,EAAC,QAJd;AAKE,UAAA,IAAI,EAAC,OALP;AAME,UAAA,QAAQ,EAAEJ;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAc,QAAA,SAAS,EAAC,WAAxB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,IAAI,EAAC,OAA5B;AAAoC,UAAA,OAAO,EAAEkB,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEU,OAAhB;AAAyB,MAAA,UAAU,EAAElC;AAArC;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE,QAAC,SAAD;AAEE,MAAA,OAAO,EAAEZ,WAFX;AAGE,MAAA,QAAQ,EAAEuD,QAHZ;AAIE,MAAA,aAAa,EAAE1B,aAJjB;AAKE,MAAA,eAAe,EAAEU;AALnB,OACOvC,WADP;AAAA;AAAA;AAAA;AAAA,YAtBF,eA6BE,QAAC,QAAD;AAEE,MAAA,OAAO,EAAEE,UAFX;AAGE,MAAA,YAAY,EAAEmC,YAHhB;AAIE,MAAA,eAAe,EAAEE;AAJnB,OACOrC,UADP;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAtNQL,M;;KAAAA,M;AAwNT,eAAeA,MAAf","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport \"./TodoNew.css\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space, Button, Input, Row, Col } from \"antd\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\n\r\nimport EditModal from \"./EditModal\";\r\nimport AddModal from \"./AddModal\";\r\n\r\nfunction Paging() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [addVisible, setAddVisible] = useState(false);\r\n  const [contact, setContact] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://gateway.smartcontactcenter.xyz/smart-contact-center-contact-list-management/api/v1/omni-contact-list-normalizations\",\r\n        {\r\n          params: {\r\n            _limit: 10,\r\n            _offset: 0,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setContacts(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //search todo\r\n  const { Search } = Input;\r\n\r\n  const onSearch = (value) => {\r\n    if (value !== \"\") {\r\n      let listSearch = [];\r\n      for (let item of todoItems) {\r\n        if (item.title.includes(value)) {\r\n          listSearch.push(item);\r\n        }\r\n      }\r\n      setTodo(listSearch);\r\n    } else {\r\n      axios\r\n        .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n        .then((res) => {\r\n          setTodo(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  //click edit\r\n  const onClickEdit = (item) => {\r\n    setItem(item);\r\n    setEditVisible(true);\r\n  };\r\n\r\n  const getEditUpdate = (item) => {\r\n    const index = findIndex(todoItems, item);\r\n\r\n    setTodo([\r\n      ...todoItems.slice(0, index),\r\n      {\r\n        id: item.id,\r\n        title: item.title,\r\n        isEditing: item.isEditing,\r\n        isCompleted: item.isCompleted,\r\n      },\r\n      ...todoItems.slice(index + 1),\r\n    ]);\r\n    setEditVisible(false);\r\n  };\r\n\r\n  //click add\r\n  const onClickAdd = () => {\r\n    setAddVisible(true);\r\n  };\r\n\r\n  const getAddUpdate = (item) => {\r\n    setTodo([\r\n      ...todoItems.slice(0, todoItems.length),\r\n      {\r\n        id: todoItems.length + 1,\r\n        title: item.title,\r\n        isEditing: item.isEditing,\r\n        isCompleted: item.isCompleted,\r\n      },\r\n    ]);\r\n    setAddVisible(false);\r\n  };\r\n\r\n  const setVisibleFalse = () => {\r\n    setEditVisible(false);\r\n    setAddVisible(false);\r\n  };\r\n\r\n  //click delete\r\n  const findIndex = (todoList, item) => {\r\n    for (let i = 0; i < todoList.length; i++) {\r\n      if (todoList[i].id === item.id) {\r\n        return i;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickDelete = (item) => {\r\n    const temp = todoItems;\r\n\r\n    const index = findIndex(temp, item);\r\n    setTodo([...todoItems.slice(0, index), ...todoItems.slice(index + 1)]);\r\n\r\n    axios\r\n      .delete(\r\n        \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\r\n          item.id\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  };\r\n\r\n  //define table\r\n  const columns = [\r\n    {\r\n      title: \"id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"ho_va_ten\",\r\n      key: \"ho_va_ten\",\r\n    },\r\n    {\r\n      title: \"Is editing?\",\r\n      dataIndex: \"sdt\",\r\n      key: \"sdt\",\r\n    },\r\n    {\r\n      title: \"Is complete?\",\r\n      dataIndex: \"gender\",\r\n      key: \"gender\",\r\n      render: (isCompleted) => {\r\n        let color;\r\n        if (isCompleted === \"male\") {\r\n          color = \"volcano\";\r\n        }\r\n        if (isCompleted === \"female\") {\r\n          color = \"green\";\r\n        }\r\n        return (\r\n          <Tag color={color} key={isCompleted}>\r\n            {isCompleted.toString().toUpperCase()}\r\n          </Tag>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <EditTwoTone\r\n            className=\"edit-button\"\r\n            onClick={() => onClickEdit(record)}\r\n          />\r\n          <DeleteTwoTone\r\n            className=\"delete\"\r\n            onClick={() => onClickDelete(record)}\r\n          />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //define data for table\r\n  const data = todoItems;\r\n\r\n  return (\r\n    <div className=\"TodoNew\">\r\n      <Row>\r\n        <Col span={6}>\r\n          <Search\r\n            className=\"searchTxb\"\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            enterButton=\"Search\"\r\n            size=\"large\"\r\n            onSearch={onSearch}\r\n          />\r\n        </Col>\r\n        <Col span={6}></Col>\r\n        <Col span={6}></Col>\r\n        <Col span={6} className=\"addButton\">\r\n          <Button type=\"primary\" size=\"large\" onClick={onClickAdd}>\r\n            +Add\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Table columns={columns} dataSource={data} />\r\n      <EditModal\r\n        key={editVisible}\r\n        visible={editVisible}\r\n        todoItem={todoItem}\r\n        getEditUpdate={getEditUpdate}\r\n        setVisibleFalse={setVisibleFalse}\r\n      />\r\n      <AddModal\r\n        key={addVisible}\r\n        visible={addVisible}\r\n        getAddUpdate={getAddUpdate}\r\n        setVisibleFalse={setVisibleFalse}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Paging;\r\n"]},"metadata":{},"sourceType":"module"}