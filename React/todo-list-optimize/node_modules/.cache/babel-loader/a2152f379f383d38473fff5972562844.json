{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\todo-list-optimize\\\\src\\\\components\\\\Paging.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport \"./TodoNew.css\";\nimport axios from \"axios\";\nimport { Table, Tag, Space, Button, Input, Row, Col } from \"antd\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport EditModal from \"./EditModal\";\nimport AddModal from \"./AddModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Paging() {\n  _s();\n\n  const [contacts, setContacts] = useState([]);\n  const [editVisible, setEditVisible] = useState(false);\n  const [addVisible, setAddVisible] = useState(false);\n  const [contact, setContact] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://gateway.smartcontactcenter.xyz/smart-contact-center-contact-list-management/api/v1/omni-contact-list-normalizations\", {\n      params: {\n        _limit: 10,\n        _offset: 0\n      }\n    }).then(res => {\n      setContacts(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //search todo\n\n  const {\n    Search\n  } = Input; //   const onSearch = (value) => {\n  //     if (value !== \"\") {\n  //       let listSearch = [];\n  //       for (let item of todoItems) {\n  //         if (item.title.includes(value)) {\n  //           listSearch.push(item);\n  //         }\n  //       }\n  //       setTodo(listSearch);\n  //     } else {\n  //       axios\n  //         .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\n  //         .then((res) => {\n  //           setTodo(res.data);\n  //         })\n  //         .catch((err) => {\n  //           console.log(err);\n  //         });\n  //     }\n  //   };\n  //   //click edit\n  //   const onClickEdit = (item) => {\n  //     setItem(item);\n  //     setEditVisible(true);\n  //   };\n  //   const getEditUpdate = (item) => {\n  //     const index = findIndex(todoItems, item);\n  //     setTodo([\n  //       ...todoItems.slice(0, index),\n  //       {\n  //         id: item.id,\n  //         title: item.title,\n  //         isEditing: item.isEditing,\n  //         isCompleted: item.isCompleted,\n  //       },\n  //       ...todoItems.slice(index + 1),\n  //     ]);\n  //     setEditVisible(false);\n  //   };\n  //   //click add\n  //   const onClickAdd = () => {\n  //     setAddVisible(true);\n  //   };\n  //   const getAddUpdate = (item) => {\n  //     setTodo([\n  //       ...todoItems.slice(0, todoItems.length),\n  //       {\n  //         id: todoItems.length + 1,\n  //         title: item.title,\n  //         isEditing: item.isEditing,\n  //         isCompleted: item.isCompleted,\n  //       },\n  //     ]);\n  //     setAddVisible(false);\n  //   };\n  //   const setVisibleFalse = () => {\n  //     setEditVisible(false);\n  //     setAddVisible(false);\n  //   };\n  //   //click delete\n  //   const findIndex = (todoList, item) => {\n  //     for (let i = 0; i < todoList.length; i++) {\n  //       if (todoList[i].id === item.id) {\n  //         return i;\n  //       }\n  //     }\n  //   };\n  //   const onClickDelete = (item) => {\n  //     const temp = todoItems;\n  //     const index = findIndex(temp, item);\n  //     setTodo([...todoItems.slice(0, index), ...todoItems.slice(index + 1)]);\n  //     axios\n  //       .delete(\n  //         \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\n  //           item.id\n  //       )\n  //       .then((response) => {\n  //         console.log(response);\n  //       });\n  //   };\n  //define table\n\n  const columns = [{\n    title: \"id\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Title\",\n    dataIndex: \"ho_va_ten\",\n    key: \"ho_va_ten\"\n  }, {\n    title: \"Is editing?\",\n    dataIndex: \"sdt\",\n    key: \"sdt\"\n  }, {\n    title: \"Is complete?\",\n    dataIndex: \"gender\",\n    key: \"gender\",\n    render: gender => {\n      let color;\n\n      if (gender === \"male\") {\n        color = \"volcano\";\n      }\n\n      if (gender === \"female\") {\n        color = \"green\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: gender.toString().toUpperCase()\n      }, gender, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(EditTwoTone, {\n        className: \"edit-button\",\n        onClick: () => onClickEdit(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteTwoTone, {\n        className: \"delete\",\n        onClick: () => onClickDelete(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)\n  }]; //define data for table\n\n  const data = contacts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoNew\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          className: \"searchTxb\",\n          placeholder: \"input search text\",\n          allowClear: true,\n          enterButton: \"Search\",\n          size: \"large\",\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        className: \"addButton\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          size: \"large\",\n          onClick: onClickAdd,\n          children: \"+Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditModal, {\n      visible: editVisible,\n      todoItem: todoItem,\n      getEditUpdate: getEditUpdate,\n      setVisibleFalse: setVisibleFalse\n    }, editVisible, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddModal, {\n      visible: addVisible,\n      getAddUpdate: getAddUpdate,\n      setVisibleFalse: setVisibleFalse\n    }, addVisible, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Paging, \"UMIu2rPYZSIa0A213UkiTCV7O4M=\");\n\n_c = Paging;\nexport default Paging;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paging\");","map":{"version":3,"sources":["D:/react/todo-list-optimize/src/components/Paging.js"],"names":["React","useEffect","useState","axios","Table","Tag","Space","Button","Input","Row","Col","EditTwoTone","DeleteTwoTone","EditModal","AddModal","Paging","contacts","setContacts","editVisible","setEditVisible","addVisible","setAddVisible","contact","setContact","get","params","_limit","_offset","then","res","data","catch","err","console","log","Search","columns","title","dataIndex","key","render","gender","color","toString","toUpperCase","text","record","onClickEdit","onClickDelete","onSearch","onClickAdd","todoItem","getEditUpdate","setVisibleFalse","getAddUpdate"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport \"./TodoNew.css\";\r\nimport axios from \"axios\";\r\nimport { Table, Tag, Space, Button, Input, Row, Col } from \"antd\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\n\r\nimport EditModal from \"./EditModal\";\r\nimport AddModal from \"./AddModal\";\r\n\r\nfunction Paging() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [editVisible, setEditVisible] = useState(false);\r\n  const [addVisible, setAddVisible] = useState(false);\r\n  const [contact, setContact] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://gateway.smartcontactcenter.xyz/smart-contact-center-contact-list-management/api/v1/omni-contact-list-normalizations\",\r\n        {\r\n          params: {\r\n            _limit: 10,\r\n            _offset: 0,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setContacts(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  //search todo\r\n  const { Search } = Input;\r\n//   const onSearch = (value) => {\r\n//     if (value !== \"\") {\r\n//       let listSearch = [];\r\n//       for (let item of todoItems) {\r\n//         if (item.title.includes(value)) {\r\n//           listSearch.push(item);\r\n//         }\r\n//       }\r\n//       setTodo(listSearch);\r\n//     } else {\r\n//       axios\r\n//         .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n//         .then((res) => {\r\n//           setTodo(res.data);\r\n//         })\r\n//         .catch((err) => {\r\n//           console.log(err);\r\n//         });\r\n//     }\r\n//   };\r\n\r\n//   //click edit\r\n//   const onClickEdit = (item) => {\r\n//     setItem(item);\r\n//     setEditVisible(true);\r\n//   };\r\n\r\n//   const getEditUpdate = (item) => {\r\n//     const index = findIndex(todoItems, item);\r\n\r\n//     setTodo([\r\n//       ...todoItems.slice(0, index),\r\n//       {\r\n//         id: item.id,\r\n//         title: item.title,\r\n//         isEditing: item.isEditing,\r\n//         isCompleted: item.isCompleted,\r\n//       },\r\n//       ...todoItems.slice(index + 1),\r\n//     ]);\r\n//     setEditVisible(false);\r\n//   };\r\n\r\n//   //click add\r\n//   const onClickAdd = () => {\r\n//     setAddVisible(true);\r\n//   };\r\n\r\n//   const getAddUpdate = (item) => {\r\n//     setTodo([\r\n//       ...todoItems.slice(0, todoItems.length),\r\n//       {\r\n//         id: todoItems.length + 1,\r\n//         title: item.title,\r\n//         isEditing: item.isEditing,\r\n//         isCompleted: item.isCompleted,\r\n//       },\r\n//     ]);\r\n//     setAddVisible(false);\r\n//   };\r\n\r\n//   const setVisibleFalse = () => {\r\n//     setEditVisible(false);\r\n//     setAddVisible(false);\r\n//   };\r\n\r\n//   //click delete\r\n//   const findIndex = (todoList, item) => {\r\n//     for (let i = 0; i < todoList.length; i++) {\r\n//       if (todoList[i].id === item.id) {\r\n//         return i;\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const onClickDelete = (item) => {\r\n//     const temp = todoItems;\r\n\r\n//     const index = findIndex(temp, item);\r\n//     setTodo([...todoItems.slice(0, index), ...todoItems.slice(index + 1)]);\r\n\r\n//     axios\r\n//       .delete(\r\n//         \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\r\n//           item.id\r\n//       )\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//       });\r\n//   };\r\n\r\n  //define table\r\n  const columns = [\r\n    {\r\n      title: \"id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"ho_va_ten\",\r\n      key: \"ho_va_ten\",\r\n    },\r\n    {\r\n      title: \"Is editing?\",\r\n      dataIndex: \"sdt\",\r\n      key: \"sdt\",\r\n    },\r\n    {\r\n      title: \"Is complete?\",\r\n      dataIndex: \"gender\",\r\n      key: \"gender\",\r\n      render: (gender) => {\r\n        let color;\r\n        if (gender === \"male\") {\r\n          color = \"volcano\";\r\n        }\r\n        if (gender === \"female\") {\r\n          color = \"green\";\r\n        }\r\n        return (\r\n          <Tag color={color} key={gender}>\r\n            {gender.toString().toUpperCase()}\r\n          </Tag>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <EditTwoTone\r\n            className=\"edit-button\"\r\n            onClick={() => onClickEdit(record)}\r\n          />\r\n          <DeleteTwoTone\r\n            className=\"delete\"\r\n            onClick={() => onClickDelete(record)}\r\n          />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //define data for table\r\n  const data = contacts;\r\n\r\n  return (\r\n    <div className=\"TodoNew\">\r\n      <Row>\r\n        <Col span={6}>\r\n          <Search\r\n            className=\"searchTxb\"\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            enterButton=\"Search\"\r\n            size=\"large\"\r\n            onSearch={onSearch}\r\n          />\r\n        </Col>\r\n        <Col span={6}></Col>\r\n        <Col span={6}></Col>\r\n        <Col span={6} className=\"addButton\">\r\n          <Button type=\"primary\" size=\"large\" onClick={onClickAdd}>\r\n            +Add\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Table columns={columns} dataSource={data} />\r\n      <EditModal\r\n        key={editVisible}\r\n        visible={editVisible}\r\n        todoItem={todoItem}\r\n        getEditUpdate={getEditUpdate}\r\n        setVisibleFalse={setVisibleFalse}\r\n      />\r\n      <AddModal\r\n        key={addVisible}\r\n        visible={addVisible}\r\n        getAddUpdate={getAddUpdate}\r\n        setVisibleFalse={setVisibleFalse}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Paging;\r\n"]},"metadata":{},"sourceType":"module"}