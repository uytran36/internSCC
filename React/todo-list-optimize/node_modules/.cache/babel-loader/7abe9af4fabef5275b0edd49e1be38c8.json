{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\todo-list-route\\\\src\\\\components\\\\TodoNew.js\";\nimport { React, Component } from \"react\";\nimport \"./TodoOld.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoNew extends Component {\n  constructor() {\n    super(); //create state\n\n    this.state = {\n      todoItems: []\n    }; //create function non parameter\n\n    this.onPressEnter = this.onPressEnter.bind(this);\n    this.chooseAll = this.chooseAll.bind(this);\n    this.clearCompleted = this.clearCompleted.bind(this); //this.routeFunc = this.routeFunc.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\").then(res => {\n      this.setState({\n        todoItems: res.data\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  } //add todo\n\n\n  onPressEnter(event) {\n    if (event.key === \"Enter\") {\n      const {\n        todoItems\n      } = this.state;\n      console.log(todoItems);\n      const n = todoItems.length + 1;\n      todoItems.push({\n        id: n,\n        title: event.target.value,\n        isEditing: false,\n        isCompleted: false\n      });\n      this.setState({\n        todoItems: todoItems\n      });\n      axios.post(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\", {\n        id: n,\n        title: event.target.value,\n        isEditing: false,\n        isCompleted: false\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      event.target.value = \"\";\n    }\n  } //click image to complete all\n\n\n  chooseAll() {\n    const {\n      todoItems\n    } = this.state;\n    let count = 0;\n\n    for (let item of todoItems) {\n      if (item.isCompleted === true) {\n        count++;\n      }\n    }\n\n    if (count === todoItems.length) {\n      for (let item of todoItems) {\n        item.isCompleted = false;\n      }\n    } else {\n      for (let item of todoItems) {\n        item.isCompleted = true;\n      }\n    }\n\n    const newState = {\n      todoItems: todoItems\n    };\n    this.setState(newState);\n    let n = todoItems.length; //  set your counter to 1\n\n    let i = 0;\n\n    function myLoop() {\n      setTimeout(function () {\n        axios.put(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" + todoItems[i].id, {\n          isCompleted: todoItems[i].isCompleted\n        }).then(res => {\n          console.log(res.data);\n        }).catch(err => {\n          console.log(err);\n        });\n        i++; //  increment the counter\n\n        if (i < n) {\n          myLoop();\n        }\n      }, 700);\n    }\n\n    myLoop();\n  } //clear completed\n\n\n  clearCompleted() {\n    axios.get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\").then(res => {\n      const todoItems = res.data;\n      let todoList = [];\n\n      for (let item of todoItems) {\n        if (item.isCompleted === true) {\n          axios.delete(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" + item.id).then(response => {\n            console.log(response);\n          }).catch(err => {\n            console.log(err);\n          });\n        } else {\n          todoList.push(item);\n        }\n      }\n\n      this.setState({\n        todoItems: todoList\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  countActive() {\n    const {\n      todoItems\n    } = this.state;\n    let n = todoItems.length;\n    let count = 0;\n\n    for (let i = 0; i < n; i++) {\n      if (todoItems[i].isCompleted === true) {\n        count++;\n      }\n    }\n\n    return n - count;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoNew;","map":{"version":3,"sources":["D:/react/todo-list-route/src/components/TodoNew.js"],"names":["React","Component","axios","TodoNew","constructor","state","todoItems","onPressEnter","bind","chooseAll","clearCompleted","componentDidMount","get","then","res","setState","data","catch","err","console","error","event","key","log","n","length","push","id","title","target","value","isEditing","isCompleted","post","count","item","newState","i","myLoop","setTimeout","put","todoList","delete","response","countActive","render"],"mappings":"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","sourcesContent":["import { React, Component } from \"react\";\r\nimport \"./TodoOld.css\";\r\nimport axios from \"axios\";\r\n\r\nclass TodoNew extends Component {\r\n  constructor() {\r\n    super();\r\n    //create state\r\n    this.state = { todoItems: [] };\r\n\r\n    //create function non parameter\r\n    this.onPressEnter = this.onPressEnter.bind(this);\r\n    this.chooseAll = this.chooseAll.bind(this);\r\n    this.clearCompleted = this.clearCompleted.bind(this);\r\n    //this.routeFunc = this.routeFunc.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n      .then((res) => {\r\n        this.setState({ todoItems: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  //add todo\r\n  onPressEnter(event) {\r\n    if (event.key === \"Enter\") {\r\n      const { todoItems } = this.state;\r\n      console.log(todoItems);\r\n      const n = todoItems.length + 1;\r\n      todoItems.push({\r\n        id: n,\r\n        title: event.target.value,\r\n        isEditing: false,\r\n        isCompleted: false,\r\n      });\r\n      this.setState({ todoItems: todoItems });\r\n      axios\r\n        .post(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\", {\r\n          id: n,\r\n          title: event.target.value,\r\n          isEditing: false,\r\n          isCompleted: false,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      event.target.value = \"\";\r\n    }\r\n  }\r\n\r\n  //click image to complete all\r\n  chooseAll() {\r\n    const { todoItems } = this.state;\r\n\r\n    let count = 0;\r\n    for (let item of todoItems) {\r\n      if (item.isCompleted === true) {\r\n        count++;\r\n      }\r\n    }\r\n    if (count === todoItems.length) {\r\n      for (let item of todoItems) {\r\n        item.isCompleted = false;\r\n      }\r\n    } else {\r\n      for (let item of todoItems) {\r\n        item.isCompleted = true;\r\n      }\r\n    }\r\n\r\n    const newState = { todoItems: todoItems };\r\n    this.setState(newState);\r\n\r\n    let n = todoItems.length; //  set your counter to 1\r\n    let i = 0;\r\n    function myLoop() {\r\n      setTimeout(function () {\r\n        axios\r\n          .put(\r\n            \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\r\n              todoItems[i].id,\r\n            {\r\n              isCompleted: todoItems[i].isCompleted,\r\n            }\r\n          )\r\n          .then((res) => {\r\n            console.log(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        i++; //  increment the counter\r\n        if (i < n) {\r\n          myLoop();\r\n        }\r\n      }, 700);\r\n    }\r\n\r\n    myLoop();\r\n  }\r\n\r\n  //clear completed\r\n  clearCompleted() {\r\n    axios\r\n      .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n      .then((res) => {\r\n        const todoItems = res.data;\r\n        let todoList = [];\r\n        for (let item of todoItems) {\r\n          if (item.isCompleted === true) {\r\n            axios\r\n              .delete(\r\n                \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\r\n                  item.id\r\n              )\r\n              .then((response) => {\r\n                console.log(response);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          } else {\r\n            todoList.push(item);\r\n          }\r\n        }\r\n        this.setState({ todoItems: todoList });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  countActive() {\r\n    const { todoItems } = this.state;\r\n    let n = todoItems.length;\r\n    let count = 0;\r\n    for (let i = 0; i < n; i++) {\r\n      if (todoItems[i].isCompleted === true) {\r\n        count++;\r\n      }\r\n    }\r\n    return n - count;\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoNew;\r\n"]},"metadata":{},"sourceType":"module"}