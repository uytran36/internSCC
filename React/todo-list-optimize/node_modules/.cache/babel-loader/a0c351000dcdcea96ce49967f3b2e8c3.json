{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\todo-list-optimize\\\\src\\\\components\\\\TodoOld.js\";\nimport { React, Component } from \"react\";\nimport \"./TodoOld.css\";\nimport TodoInput from \"./TodoInput\";\nimport TodoFilter from \"./TodoFilter\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TodoGeneral from \"./TodoGeneral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoOld extends Component {\n  constructor() {\n    super(); //create state\n\n    this.state = {\n      todoItems: []\n    }; //create function non parameter\n\n    this.onPressEnter = this.onPressEnter.bind(this);\n    this.chooseAll = this.chooseAll.bind(this);\n    this.clearCompleted = this.clearCompleted.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\").then(res => {\n      this.setState({\n        todoItems: res.data\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  } //to mark complete function\n\n\n  findIndex(todoItems, item) {\n    for (let i = 0; i < todoItems.length; i++) {\n      if (todoItems[i].id === item.id) {\n        return i;\n      }\n    }\n  }\n\n  onItemClicked(item) {\n    return () => {\n      const isCompleted = item.isCompleted;\n      const {\n        todoItems\n      } = this.state;\n      const index = this.findIndex(todoItems, item);\n      this.setState({\n        todoItems: [...todoItems.slice(0, index), { ...item,\n          isCompleted: !isCompleted\n        }, ...todoItems.slice(index + 1)]\n      });\n      axios.put(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" + item.id, {\n        isCompleted: !isCompleted\n      }).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  } //double click to edit text\n\n\n  onDoubleClick(item) {\n    return () => {\n      const {\n        todoItems\n      } = this.state;\n      const index = todoItems.indexOf(item);\n      this.setState({\n        todoItems: [...todoItems.slice(0, index), { ...item,\n          isEditing: true,\n          isCompleted: item.isCompleted\n        }, ...todoItems.slice(index + 1)]\n      });\n    };\n  } //save text afer edit (click outside textbox)\n\n\n  onChange(event, item) {\n    const text = event.target.value;\n    console.log(text);\n    console.log(item); // const isCompleted = item.isCompleted;\n    // const { todoItems } = this.state;\n    // const index = this.findIndex(todoItems, item);\n    // this.setState({\n    //   todoItems: [\n    //     ...todoItems.slice(0, index),\n    //     {\n    //       ...item,\n    //       title: text,\n    //       isEditing: true,\n    //       isCompleted: isCompleted,\n    //     },\n    //     ...todoItems.slice(index + 1),\n    //   ],\n    // });\n  }\n\n  onBlur(item) {\n    return () => {\n      const text = item.title;\n      const isCompleted = item.isCompleted;\n      const {\n        todoItems\n      } = this.state;\n      const index = this.findIndex(todoItems, item);\n      this.setState({\n        todoItems: [...todoItems.slice(0, index), { ...item,\n          title: text,\n          isEditing: false,\n          isCompleted: isCompleted\n        }, ...todoItems.slice(index + 1)]\n      });\n      axios.put(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" + item.id, {\n        title: text\n      }).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  } //delete todo\n\n\n  onDelete(item) {\n    return () => {\n      const {\n        todoItems\n      } = this.state;\n      const index = this.findIndex(todoItems, item);\n      this.setState({\n        todoItems: [...todoItems.slice(0, index), ...todoItems.slice(index + 1)]\n      });\n      axios.delete(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" + item.id).then(response => {\n        console.log(response);\n      });\n    };\n  } //add todo\n\n\n  onPressEnter(event) {\n    if (event.key === \"Enter\") {\n      const {\n        todoItems\n      } = this.state;\n      console.log(todoItems);\n      const n = todoItems.length + 1;\n      todoItems.push({\n        id: n,\n        title: event.target.value,\n        isEditing: false,\n        isCompleted: false\n      });\n      this.setState({\n        todoItems: todoItems\n      });\n      axios.post(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\", {\n        id: n,\n        title: event.target.value,\n        isEditing: false,\n        isCompleted: false\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      event.target.value = \"\";\n    }\n  } //click image to complete all\n\n\n  chooseAll() {\n    const {\n      todoItems\n    } = this.state;\n    let count = 0;\n\n    for (let item of todoItems) {\n      if (item.isCompleted === true) {\n        count++;\n      }\n    }\n\n    if (count === todoItems.length) {\n      for (let item of todoItems) {\n        item.isCompleted = false;\n      }\n    } else {\n      for (let item of todoItems) {\n        item.isCompleted = true;\n      }\n    }\n\n    const newState = {\n      todoItems: todoItems\n    };\n    this.setState(newState);\n    let n = todoItems.length; //  set your counter to 1\n\n    let i = 0;\n\n    function myLoop() {\n      setTimeout(function () {\n        axios.put(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" + todoItems[i].id, {\n          isCompleted: todoItems[i].isCompleted\n        }).then(res => {\n          console.log(res.data);\n        }).catch(err => {\n          console.log(err);\n        });\n        i++; //  increment the counter\n\n        if (i < n) {\n          myLoop();\n        }\n      }, 5000);\n    }\n\n    myLoop();\n  } //clear completed\n\n\n  clearCompleted() {\n    axios.get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\").then(res => {\n      const todoItems = res.data;\n      let todoList = [];\n\n      for (let item of todoItems) {\n        if (item.isCompleted === true) {\n          axios.delete(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" + item.id).then(response => {\n            console.log(response);\n          }).catch(err => {\n            console.log(err);\n          });\n        } else {\n          todoList.push(item);\n        }\n      }\n\n      this.setState({\n        todoItems: todoList\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  countActive() {\n    const {\n      todoItems\n    } = this.state;\n    let n = todoItems.length;\n    let count = 0;\n\n    for (let i = 0; i < n; i++) {\n      if (todoItems[i].isCompleted === true) {\n        count++;\n      }\n    }\n\n    return n - count;\n  }\n\n  render() {\n    const numItem = this.countActive();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoOld\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(TodoInput, {\n          onKeyUp: this.onPressEnter,\n          chooseAll: this.chooseAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(TodoGeneral, {\n              path: \"\",\n              onItemClicked: todo => this.onItemClicked(todo),\n              onDoubleClick: todo => this.onDoubleClick(todo),\n              onChange: todo => this.onChange(todo),\n              onBlur: todo => this.onBlur(todo),\n              onDelete: todo => this.onDelete(todo),\n              todoItems: this.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/active\",\n            children: /*#__PURE__*/_jsxDEV(TodoGeneral, {\n              path: \"active\",\n              onItemClicked: todo => this.onItemClicked(todo),\n              onDoubleClick: todo => this.onDoubleClick(todo),\n              onChange: (event, todo) => this.onChange(event, todo),\n              onBlur: todo => this.onBlur(todo),\n              onDelete: todo => this.onDelete(todo),\n              todoItems: this.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/completed\",\n            children: /*#__PURE__*/_jsxDEV(TodoGeneral, {\n              path: \"completed\",\n              onItemClicked: todo => this.onItemClicked(todo),\n              onDoubleClick: todo => this.onDoubleClick(todo),\n              onChange: todo => this.onChange(todo),\n              onBlur: todo => this.onBlur(todo),\n              onDelete: todo => this.onDelete(todo),\n              todoItems: this.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodoFilter, {\n          numItem: numItem,\n          clearCompleted: this.clearCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoOld;","map":{"version":3,"sources":["D:/react/todo-list-optimize/src/components/TodoOld.js"],"names":["React","Component","TodoInput","TodoFilter","axios","BrowserRouter","Router","Switch","Route","TodoGeneral","TodoOld","constructor","state","todoItems","onPressEnter","bind","chooseAll","clearCompleted","componentDidMount","get","then","res","setState","data","catch","err","console","error","findIndex","item","i","length","id","onItemClicked","isCompleted","index","slice","put","log","onDoubleClick","indexOf","isEditing","onChange","event","text","target","value","onBlur","title","onDelete","delete","response","key","n","push","post","count","newState","myLoop","setTimeout","todoList","countActive","render","numItem","todo"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAC9BU,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb,CAHY,CAKZ;;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClBd,IAAAA,KAAK,CACFe,GADH,CACO,8DADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,WAAKC,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAEQ,GAAG,CAACE;AAAjB,OAAd;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAPH;AAQD,GArB6B,CAuB9B;;;AACAG,EAAAA,SAAS,CAACf,SAAD,EAAYgB,IAAZ,EAAkB;AACzB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,SAAS,CAACkB,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAIjB,SAAS,CAACiB,CAAD,CAAT,CAAaE,EAAb,KAAoBH,IAAI,CAACG,EAA7B,EAAiC;AAC/B,eAAOF,CAAP;AACD;AACF;AACF;;AAEDG,EAAAA,aAAa,CAACJ,IAAD,EAAO;AAClB,WAAO,MAAM;AACX,YAAMK,WAAW,GAAGL,IAAI,CAACK,WAAzB;AACA,YAAM;AAAErB,QAAAA;AAAF,UAAgB,KAAKD,KAA3B;AACA,YAAMuB,KAAK,GAAG,KAAKP,SAAL,CAAef,SAAf,EAA0BgB,IAA1B,CAAd;AACA,WAAKP,QAAL,CAAc;AACZT,QAAAA,SAAS,EAAE,CACT,GAAGA,SAAS,CAACuB,KAAV,CAAgB,CAAhB,EAAmBD,KAAnB,CADM,EAET,EACE,GAAGN,IADL;AAEEK,UAAAA,WAAW,EAAE,CAACA;AAFhB,SAFS,EAMT,GAAGrB,SAAS,CAACuB,KAAV,CAAgBD,KAAK,GAAG,CAAxB,CANM;AADC,OAAd;AAWA/B,MAAAA,KAAK,CACFiC,GADH,CAEI,kEACER,IAAI,CAACG,EAHX,EAII;AACEE,QAAAA,WAAW,EAAE,CAACA;AADhB,OAJJ,EAQGd,IARH,CAQSC,GAAD,IAAS;AACbK,QAAAA,OAAO,CAACY,GAAR,CAAYjB,GAAG,CAACE,IAAhB;AACD,OAVH,EAWGC,KAXH,CAWUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACY,GAAR,CAAYb,GAAZ;AACD,OAbH;AAcD,KA7BD;AA8BD,GA/D6B,CAiE9B;;;AACAc,EAAAA,aAAa,CAACV,IAAD,EAAO;AAClB,WAAO,MAAM;AACX,YAAM;AAAEhB,QAAAA;AAAF,UAAgB,KAAKD,KAA3B;AACA,YAAMuB,KAAK,GAAGtB,SAAS,CAAC2B,OAAV,CAAkBX,IAAlB,CAAd;AACA,WAAKP,QAAL,CAAc;AACZT,QAAAA,SAAS,EAAE,CACT,GAAGA,SAAS,CAACuB,KAAV,CAAgB,CAAhB,EAAmBD,KAAnB,CADM,EAET,EACE,GAAGN,IADL;AAEEY,UAAAA,SAAS,EAAE,IAFb;AAGEP,UAAAA,WAAW,EAAEL,IAAI,CAACK;AAHpB,SAFS,EAOT,GAAGrB,SAAS,CAACuB,KAAV,CAAgBD,KAAK,GAAG,CAAxB,CAPM;AADC,OAAd;AAWD,KAdD;AAeD,GAlF6B,CAoF9B;;;AACAO,EAAAA,QAAQ,CAACC,KAAD,EAAQd,IAAR,EAAc;AACpB,UAAMe,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACApB,IAAAA,OAAO,CAACY,GAAR,CAAYM,IAAZ;AACAlB,IAAAA,OAAO,CAACY,GAAR,CAAYT,IAAZ,EAHoB,CAIpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDkB,EAAAA,MAAM,CAAClB,IAAD,EAAO;AACX,WAAO,MAAM;AACX,YAAMe,IAAI,GAAGf,IAAI,CAACmB,KAAlB;AACA,YAAMd,WAAW,GAAGL,IAAI,CAACK,WAAzB;AACA,YAAM;AAAErB,QAAAA;AAAF,UAAgB,KAAKD,KAA3B;AACA,YAAMuB,KAAK,GAAG,KAAKP,SAAL,CAAef,SAAf,EAA0BgB,IAA1B,CAAd;AAEA,WAAKP,QAAL,CAAc;AACZT,QAAAA,SAAS,EAAE,CACT,GAAGA,SAAS,CAACuB,KAAV,CAAgB,CAAhB,EAAmBD,KAAnB,CADM,EAET,EACE,GAAGN,IADL;AAEEmB,UAAAA,KAAK,EAAEJ,IAFT;AAGEH,UAAAA,SAAS,EAAE,KAHb;AAIEP,UAAAA,WAAW,EAAEA;AAJf,SAFS,EAQT,GAAGrB,SAAS,CAACuB,KAAV,CAAgBD,KAAK,GAAG,CAAxB,CARM;AADC,OAAd;AAaA/B,MAAAA,KAAK,CACFiC,GADH,CAEI,kEACER,IAAI,CAACG,EAHX,EAII;AACEgB,QAAAA,KAAK,EAAEJ;AADT,OAJJ,EAQGxB,IARH,CAQSC,GAAD,IAAS;AACbK,QAAAA,OAAO,CAACY,GAAR,CAAYjB,GAAG,CAACE,IAAhB;AACD,OAVH,EAWGC,KAXH,CAWUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACY,GAAR,CAAYb,GAAZ;AACD,OAbH;AAcD,KAjCD;AAkCD,GA7I6B,CA+I9B;;;AACAwB,EAAAA,QAAQ,CAACpB,IAAD,EAAO;AACb,WAAO,MAAM;AACX,YAAM;AAAEhB,QAAAA;AAAF,UAAgB,KAAKD,KAA3B;AACA,YAAMuB,KAAK,GAAG,KAAKP,SAAL,CAAef,SAAf,EAA0BgB,IAA1B,CAAd;AACA,WAAKP,QAAL,CAAc;AACZT,QAAAA,SAAS,EAAE,CACT,GAAGA,SAAS,CAACuB,KAAV,CAAgB,CAAhB,EAAmBD,KAAnB,CADM,EAET,GAAGtB,SAAS,CAACuB,KAAV,CAAgBD,KAAK,GAAG,CAAxB,CAFM;AADC,OAAd;AAMA/B,MAAAA,KAAK,CACF8C,MADH,CAEI,kEACErB,IAAI,CAACG,EAHX,EAKGZ,IALH,CAKS+B,QAAD,IAAc;AAClBzB,QAAAA,OAAO,CAACY,GAAR,CAAYa,QAAZ;AACD,OAPH;AAQD,KAjBD;AAkBD,GAnK6B,CAqK9B;;;AACArC,EAAAA,YAAY,CAAC6B,KAAD,EAAQ;AAClB,QAAIA,KAAK,CAACS,GAAN,KAAc,OAAlB,EAA2B;AACzB,YAAM;AAAEvC,QAAAA;AAAF,UAAgB,KAAKD,KAA3B;AACAc,MAAAA,OAAO,CAACY,GAAR,CAAYzB,SAAZ;AACA,YAAMwC,CAAC,GAAGxC,SAAS,CAACkB,MAAV,GAAmB,CAA7B;AACAlB,MAAAA,SAAS,CAACyC,IAAV,CAAe;AACbtB,QAAAA,EAAE,EAAEqB,CADS;AAEbL,QAAAA,KAAK,EAAEL,KAAK,CAACE,MAAN,CAAaC,KAFP;AAGbL,QAAAA,SAAS,EAAE,KAHE;AAIbP,QAAAA,WAAW,EAAE;AAJA,OAAf;AAMA,WAAKZ,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAEA;AAAb,OAAd;AACAT,MAAAA,KAAK,CACFmD,IADH,CACQ,8DADR,EACwE;AACpEvB,QAAAA,EAAE,EAAEqB,CADgE;AAEpEL,QAAAA,KAAK,EAAEL,KAAK,CAACE,MAAN,CAAaC,KAFgD;AAGpEL,QAAAA,SAAS,EAAE,KAHyD;AAIpEP,QAAAA,WAAW,EAAE;AAJuD,OADxE,EAOGd,IAPH,CAOSC,GAAD,IAAS;AACbK,QAAAA,OAAO,CAACY,GAAR,CAAYjB,GAAZ;AACD,OATH,EAUGG,KAVH,CAUUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACY,GAAR,CAAYb,GAAZ;AACD,OAZH;AAaAkB,MAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,GAAqB,EAArB;AACD;AACF,GAjM6B,CAmM9B;;;AACA9B,EAAAA,SAAS,GAAG;AACV,UAAM;AAAEH,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AAEA,QAAI4C,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAI3B,IAAT,IAAiBhB,SAAjB,EAA4B;AAC1B,UAAIgB,IAAI,CAACK,WAAL,KAAqB,IAAzB,EAA+B;AAC7BsB,QAAAA,KAAK;AACN;AACF;;AACD,QAAIA,KAAK,KAAK3C,SAAS,CAACkB,MAAxB,EAAgC;AAC9B,WAAK,IAAIF,IAAT,IAAiBhB,SAAjB,EAA4B;AAC1BgB,QAAAA,IAAI,CAACK,WAAL,GAAmB,KAAnB;AACD;AACF,KAJD,MAIO;AACL,WAAK,IAAIL,IAAT,IAAiBhB,SAAjB,EAA4B;AAC1BgB,QAAAA,IAAI,CAACK,WAAL,GAAmB,IAAnB;AACD;AACF;;AAED,UAAMuB,QAAQ,GAAG;AAAE5C,MAAAA,SAAS,EAAEA;AAAb,KAAjB;AACA,SAAKS,QAAL,CAAcmC,QAAd;AAEA,QAAIJ,CAAC,GAAGxC,SAAS,CAACkB,MAAlB,CAtBU,CAsBgB;;AAC1B,QAAID,CAAC,GAAG,CAAR;;AACA,aAAS4B,MAAT,GAAkB;AAChBC,MAAAA,UAAU,CAAC,YAAY;AACrBvD,QAAAA,KAAK,CACFiC,GADH,CAEI,kEACExB,SAAS,CAACiB,CAAD,CAAT,CAAaE,EAHnB,EAII;AACEE,UAAAA,WAAW,EAAErB,SAAS,CAACiB,CAAD,CAAT,CAAaI;AAD5B,SAJJ,EAQGd,IARH,CAQSC,GAAD,IAAS;AACbK,UAAAA,OAAO,CAACY,GAAR,CAAYjB,GAAG,CAACE,IAAhB;AACD,SAVH,EAWGC,KAXH,CAWUC,GAAD,IAAS;AACdC,UAAAA,OAAO,CAACY,GAAR,CAAYb,GAAZ;AACD,SAbH;AAcAK,QAAAA,CAAC,GAfoB,CAehB;;AACL,YAAIA,CAAC,GAAGuB,CAAR,EAAW;AACTK,UAAAA,MAAM;AACP;AACF,OAnBS,EAmBP,IAnBO,CAAV;AAoBD;;AAEDA,IAAAA,MAAM;AACP,GApP6B,CAsP9B;;;AACAzC,EAAAA,cAAc,GAAG;AACfb,IAAAA,KAAK,CACFe,GADH,CACO,8DADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,YAAMR,SAAS,GAAGQ,GAAG,CAACE,IAAtB;AACA,UAAIqC,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAI/B,IAAT,IAAiBhB,SAAjB,EAA4B;AAC1B,YAAIgB,IAAI,CAACK,WAAL,KAAqB,IAAzB,EAA+B;AAC7B9B,UAAAA,KAAK,CACF8C,MADH,CAEI,kEACErB,IAAI,CAACG,EAHX,EAKGZ,IALH,CAKS+B,QAAD,IAAc;AAClBzB,YAAAA,OAAO,CAACY,GAAR,CAAYa,QAAZ;AACD,WAPH,EAQG3B,KARH,CAQUC,GAAD,IAAS;AACdC,YAAAA,OAAO,CAACY,GAAR,CAAYb,GAAZ;AACD,WAVH;AAWD,SAZD,MAYO;AACLmC,UAAAA,QAAQ,CAACN,IAAT,CAAczB,IAAd;AACD;AACF;;AACD,WAAKP,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAE+C;AAAb,OAAd;AACD,KAvBH,EAwBGpC,KAxBH,CAwBUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KA1BH;AA2BD;;AAEDoC,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEhD,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,QAAIyC,CAAC,GAAGxC,SAAS,CAACkB,MAAlB;AACA,QAAIyB,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,CAApB,EAAuBvB,CAAC,EAAxB,EAA4B;AAC1B,UAAIjB,SAAS,CAACiB,CAAD,CAAT,CAAaI,WAAb,KAA6B,IAAjC,EAAuC;AACrCsB,QAAAA,KAAK;AACN;AACF;;AACD,WAAOH,CAAC,GAAGG,KAAX;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,KAAKF,WAAL,EAAhB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAE,KAAK/C,YAAzB;AAAuC,UAAA,SAAS,EAAE,KAAKE;AAAvD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,IAAI,EAAC,EADP;AAEE,cAAA,aAAa,EAAGgD,IAAD,IAAU,KAAK/B,aAAL,CAAmB+B,IAAnB,CAF3B;AAGE,cAAA,aAAa,EAAGA,IAAD,IAAU,KAAKzB,aAAL,CAAmByB,IAAnB,CAH3B;AAIE,cAAA,QAAQ,EAAGA,IAAD,IAAU,KAAKtB,QAAL,CAAcsB,IAAd,CAJtB;AAKE,cAAA,MAAM,EAAGA,IAAD,IAAU,KAAKjB,MAAL,CAAYiB,IAAZ,CALpB;AAME,cAAA,QAAQ,EAAGA,IAAD,IAAU,KAAKf,QAAL,CAAce,IAAd,CANtB;AAOE,cAAA,SAAS,EAAE,KAAKpD;AAPlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,SAAlB;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,aAAa,EAAGoD,IAAD,IAAU,KAAK/B,aAAL,CAAmB+B,IAAnB,CAF3B;AAGE,cAAA,aAAa,EAAGA,IAAD,IAAU,KAAKzB,aAAL,CAAmByB,IAAnB,CAH3B;AAIE,cAAA,QAAQ,EAAE,CAACrB,KAAD,EAAQqB,IAAR,KAAiB,KAAKtB,QAAL,CAAcC,KAAd,EAAoBqB,IAApB,CAJ7B;AAKE,cAAA,MAAM,EAAGA,IAAD,IAAU,KAAKjB,MAAL,CAAYiB,IAAZ,CALpB;AAME,cAAA,QAAQ,EAAGA,IAAD,IAAU,KAAKf,QAAL,CAAce,IAAd,CANtB;AAOE,cAAA,SAAS,EAAE,KAAKpD;AAPlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAuBE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,YAAlB;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,IAAI,EAAC,WADP;AAEE,cAAA,aAAa,EAAGoD,IAAD,IAAU,KAAK/B,aAAL,CAAmB+B,IAAnB,CAF3B;AAGE,cAAA,aAAa,EAAGA,IAAD,IAAU,KAAKzB,aAAL,CAAmByB,IAAnB,CAH3B;AAIE,cAAA,QAAQ,EAAGA,IAAD,IAAU,KAAKtB,QAAL,CAAcsB,IAAd,CAJtB;AAKE,cAAA,MAAM,EAAGA,IAAD,IAAU,KAAKjB,MAAL,CAAYiB,IAAZ,CALpB;AAME,cAAA,QAAQ,EAAGA,IAAD,IAAU,KAAKf,QAAL,CAAce,IAAd,CANtB;AAOE,cAAA,SAAS,EAAE,KAAKpD;AAPlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAqCE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEmD,OAArB;AAA8B,UAAA,cAAc,EAAE,KAAK9C;AAAnD;AAAA;AAAA;AAAA;AAAA,gBArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2CD;;AA9U6B;;AAiVhC,eAAeP,OAAf","sourcesContent":["import { React, Component } from \"react\";\r\nimport \"./TodoOld.css\";\r\nimport TodoInput from \"./TodoInput\";\r\nimport TodoFilter from \"./TodoFilter\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport TodoGeneral from \"./TodoGeneral\";\r\n\r\nclass TodoOld extends Component {\r\n  constructor() {\r\n    super();\r\n    //create state\r\n    this.state = { todoItems: [] };\r\n\r\n    //create function non parameter\r\n    this.onPressEnter = this.onPressEnter.bind(this);\r\n    this.chooseAll = this.chooseAll.bind(this);\r\n    this.clearCompleted = this.clearCompleted.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n      .then((res) => {\r\n        this.setState({ todoItems: res.data });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  //to mark complete function\r\n  findIndex(todoItems, item) {\r\n    for (let i = 0; i < todoItems.length; i++) {\r\n      if (todoItems[i].id === item.id) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  onItemClicked(item) {\r\n    return () => {\r\n      const isCompleted = item.isCompleted;\r\n      const { todoItems } = this.state;\r\n      const index = this.findIndex(todoItems, item);\r\n      this.setState({\r\n        todoItems: [\r\n          ...todoItems.slice(0, index),\r\n          {\r\n            ...item,\r\n            isCompleted: !isCompleted,\r\n          },\r\n          ...todoItems.slice(index + 1),\r\n        ],\r\n      });\r\n\r\n      axios\r\n        .put(\r\n          \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\r\n            item.id,\r\n          {\r\n            isCompleted: !isCompleted,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  }\r\n\r\n  //double click to edit text\r\n  onDoubleClick(item) {\r\n    return () => {\r\n      const { todoItems } = this.state;\r\n      const index = todoItems.indexOf(item);\r\n      this.setState({\r\n        todoItems: [\r\n          ...todoItems.slice(0, index),\r\n          {\r\n            ...item,\r\n            isEditing: true,\r\n            isCompleted: item.isCompleted,\r\n          },\r\n          ...todoItems.slice(index + 1),\r\n        ],\r\n      });\r\n    };\r\n  }\r\n\r\n  //save text afer edit (click outside textbox)\r\n  onChange(event, item) {\r\n    const text = event.target.value;\r\n    console.log(text);\r\n    console.log(item);\r\n    // const isCompleted = item.isCompleted;\r\n    // const { todoItems } = this.state;\r\n    // const index = this.findIndex(todoItems, item);\r\n    // this.setState({\r\n    //   todoItems: [\r\n    //     ...todoItems.slice(0, index),\r\n    //     {\r\n    //       ...item,\r\n    //       title: text,\r\n    //       isEditing: true,\r\n    //       isCompleted: isCompleted,\r\n    //     },\r\n    //     ...todoItems.slice(index + 1),\r\n    //   ],\r\n    // });\r\n  }\r\n\r\n  onBlur(item) {\r\n    return () => {\r\n      const text = item.title;\r\n      const isCompleted = item.isCompleted;\r\n      const { todoItems } = this.state;\r\n      const index = this.findIndex(todoItems, item);\r\n\r\n      this.setState({\r\n        todoItems: [\r\n          ...todoItems.slice(0, index),\r\n          {\r\n            ...item,\r\n            title: text,\r\n            isEditing: false,\r\n            isCompleted: isCompleted,\r\n          },\r\n          ...todoItems.slice(index + 1),\r\n        ],\r\n      });\r\n\r\n      axios\r\n        .put(\r\n          \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\r\n            item.id,\r\n          {\r\n            title: text,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  }\r\n\r\n  //delete todo\r\n  onDelete(item) {\r\n    return () => {\r\n      const { todoItems } = this.state;\r\n      const index = this.findIndex(todoItems, item);\r\n      this.setState({\r\n        todoItems: [\r\n          ...todoItems.slice(0, index),\r\n          ...todoItems.slice(index + 1),\r\n        ],\r\n      });\r\n      axios\r\n        .delete(\r\n          \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\r\n            item.id\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n        });\r\n    };\r\n  }\r\n\r\n  //add todo\r\n  onPressEnter(event) {\r\n    if (event.key === \"Enter\") {\r\n      const { todoItems } = this.state;\r\n      console.log(todoItems);\r\n      const n = todoItems.length + 1;\r\n      todoItems.push({\r\n        id: n,\r\n        title: event.target.value,\r\n        isEditing: false,\r\n        isCompleted: false,\r\n      });\r\n      this.setState({ todoItems: todoItems });\r\n      axios\r\n        .post(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\", {\r\n          id: n,\r\n          title: event.target.value,\r\n          isEditing: false,\r\n          isCompleted: false,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      event.target.value = \"\";\r\n    }\r\n  }\r\n\r\n  //click image to complete all\r\n  chooseAll() {\r\n    const { todoItems } = this.state;\r\n\r\n    let count = 0;\r\n    for (let item of todoItems) {\r\n      if (item.isCompleted === true) {\r\n        count++;\r\n      }\r\n    }\r\n    if (count === todoItems.length) {\r\n      for (let item of todoItems) {\r\n        item.isCompleted = false;\r\n      }\r\n    } else {\r\n      for (let item of todoItems) {\r\n        item.isCompleted = true;\r\n      }\r\n    }\r\n\r\n    const newState = { todoItems: todoItems };\r\n    this.setState(newState);\r\n\r\n    let n = todoItems.length; //  set your counter to 1\r\n    let i = 0;\r\n    function myLoop() {\r\n      setTimeout(function () {\r\n        axios\r\n          .put(\r\n            \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\r\n              todoItems[i].id,\r\n            {\r\n              isCompleted: todoItems[i].isCompleted,\r\n            }\r\n          )\r\n          .then((res) => {\r\n            console.log(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        i++; //  increment the counter\r\n        if (i < n) {\r\n          myLoop();\r\n        }\r\n      }, 5000);\r\n    }\r\n\r\n    myLoop();\r\n  }\r\n\r\n  //clear completed\r\n  clearCompleted() {\r\n    axios\r\n      .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n      .then((res) => {\r\n        const todoItems = res.data;\r\n        let todoList = [];\r\n        for (let item of todoItems) {\r\n          if (item.isCompleted === true) {\r\n            axios\r\n              .delete(\r\n                \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\r\n                  item.id\r\n              )\r\n              .then((response) => {\r\n                console.log(response);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          } else {\r\n            todoList.push(item);\r\n          }\r\n        }\r\n        this.setState({ todoItems: todoList });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  countActive() {\r\n    const { todoItems } = this.state;\r\n    let n = todoItems.length;\r\n    let count = 0;\r\n    for (let i = 0; i < n; i++) {\r\n      if (todoItems[i].isCompleted === true) {\r\n        count++;\r\n      }\r\n    }\r\n    return n - count;\r\n  }\r\n\r\n  render() {\r\n    const numItem = this.countActive();\r\n    return (\r\n      <div className=\"TodoOld\">\r\n        <Router>\r\n          <TodoInput onKeyUp={this.onPressEnter} chooseAll={this.chooseAll} />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <TodoGeneral\r\n                path=\"\"\r\n                onItemClicked={(todo) => this.onItemClicked(todo)}\r\n                onDoubleClick={(todo) => this.onDoubleClick(todo)}\r\n                onChange={(todo) => this.onChange(todo)}\r\n                onBlur={(todo) => this.onBlur(todo)}\r\n                onDelete={(todo) => this.onDelete(todo)}\r\n                todoItems={this.state}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/active\">\r\n              <TodoGeneral\r\n                path=\"active\"\r\n                onItemClicked={(todo) => this.onItemClicked(todo)}\r\n                onDoubleClick={(todo) => this.onDoubleClick(todo)}\r\n                onChange={(event, todo) => this.onChange(event,todo)}\r\n                onBlur={(todo) => this.onBlur(todo)}\r\n                onDelete={(todo) => this.onDelete(todo)}\r\n                todoItems={this.state}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/completed\">\r\n              <TodoGeneral\r\n                path=\"completed\"\r\n                onItemClicked={(todo) => this.onItemClicked(todo)}\r\n                onDoubleClick={(todo) => this.onDoubleClick(todo)}\r\n                onChange={(todo) => this.onChange(todo)}\r\n                onBlur={(todo) => this.onBlur(todo)}\r\n                onDelete={(todo) => this.onDelete(todo)}\r\n                todoItems={this.state}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n          <TodoFilter numItem={numItem} clearCompleted={this.clearCompleted} />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoOld;\r\n"]},"metadata":{},"sourceType":"module"}