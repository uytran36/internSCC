{"ast":null,"code":"var _jsxFileName = \"D:\\\\internSCC\\\\React\\\\todo-list-optimize\\\\src\\\\components\\\\Temp.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable no-script-url */\nimport React, { useState } from \"react\";\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst originData = [];\n\nfor (let i = 0; i < 10; i++) {\n  originData.push({\n    key: i.toString(),\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`\n  });\n}\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === \"number\" ? /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 46\n  }, this) : /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 64\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: `Please Input ${title}!`\n      }],\n      children: inputNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableCell;\n\nconst EditableTable = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState(\"\");\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: \"\",\n      age: \"\",\n      address: \"\",\n      ...record\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const save = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey(\"\");\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey(\"\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n\n  const columns = [{\n    title: \"name\",\n    dataIndex: \"name\",\n    width: \"25%\",\n    editable: true\n  }, {\n    title: \"age\",\n    dataIndex: \"age\",\n    width: \"15%\",\n    editable: true\n  }, {\n    title: \"address\",\n    dataIndex: \"address\",\n    width: \"40%\",\n    editable: true\n  }, {\n    title: \"operation\",\n    dataIndex: \"operation\",\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:;\",\n          onClick: () => save(record.key),\n          style: {\n            marginRight: 8\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography.Link, {\n        disabled: editingKey !== \"\",\n        onClick: () => edit(record),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      components: {\n        body: {\n          cell: EditableCell\n        }\n      },\n      bordered: true,\n      dataSource: data,\n      columns: mergedColumns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: cancel\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableTable, \"nLndwJtA+ipg8muSqM18C8phNNU=\", false, function () {\n  return [Form.useForm];\n});\n\n_c2 = EditableTable;\n\nconst Temp = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EditableTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Temp;\nexport default Temp;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"EditableTable\");\n$RefreshReg$(_c3, \"Temp\");","map":{"version":3,"sources":["D:/internSCC/React/todo-list-optimize/src/components/Temp.js"],"names":["React","useState","Table","Input","InputNumber","Popconfirm","Form","Typography","originData","i","push","key","toString","name","age","address","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","EditableTable","form","useForm","data","setData","editingKey","setEditingKey","isEditing","edit","setFieldsValue","cancel","save","row","validateFields","newData","findIndex","item","splice","errInfo","console","log","columns","width","editable","render","_","marginRight","mergedColumns","map","col","onCell","body","cell","onChange","Temp"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-script-url */\r\nimport React, { useState } from \"react\";\r\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography } from \"antd\";\r\nconst originData = [];\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n  originData.push({\r\n    key: i.toString(),\r\n    name: `Edrward ${i}`,\r\n    age: 32,\r\n    address: `London Park no. ${i}`,\r\n  });\r\n}\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst EditableTable = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      age: \"\",\r\n      address: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"name\",\r\n      dataIndex: \"name\",\r\n      width: \"25%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"age\",\r\n      dataIndex: \"age\",\r\n      width: \"15%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"address\",\r\n      dataIndex: \"address\",\r\n      width: \"40%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"operation\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              href=\"javascript:;\"\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </a>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <a>Cancel</a>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <Typography.Link\r\n            disabled={editingKey !== \"\"}\r\n            onClick={() => edit(record)}\r\n          >\r\n            Edit\r\n          </Typography.Link>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  \r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Temp = () => {\r\n  return (\r\n    <div>\r\n      <EditableTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Temp;\r\n"]},"metadata":{},"sourceType":"module"}