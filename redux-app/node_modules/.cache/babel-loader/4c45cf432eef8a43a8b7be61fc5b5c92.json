{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\redux-app\\\\src\\\\components\\\\TableContacts.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Table, Tag, Space, Button, Input, Row, Col } from \"antd\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport { fetchContactRequest, delContactRequest } from \"../actions/contacts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TableContacts(props) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    props.fetchContact();\n  }, []);\n\n  const onClickAdd = () => {//  setAddVisible(true);\n  };\n\n  const {\n    Search\n  } = Input;\n\n  const onSearch = value => {// if (value !== \"\") {\n    //   let listSearch = [];\n    //   for (let item of todoItems) {\n    //     if (item.title.includes(value)) {\n    //       listSearch.push(item);\n    //     }\n    //   }\n    //   setTodo(listSearch);\n    // } else {\n    //   axios\n    //     .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\n    //     .then((res) => {\n    //       setTodo(res.data);\n    //     })\n    //     .catch((err) => {\n    //       console.log(err);\n    //     });\n    // }\n  }; //when click edit\n\n\n  const onClickEdit = item => {// setItem(item);\n    // setEditVisible(true);\n  };\n\n  const getEditUpdate = item => {// const index = findIndex(todoItems, item);\n    // setTodo([\n    //   ...todoItems.slice(0, index),\n    //   {\n    //     id: item.id,\n    //     title: item.title,\n    //     isEditing: item.isEditing,\n    //     isCompleted: item.isCompleted,\n    //   },\n    //   ...todoItems.slice(index + 1),\n    // ]);\n    // setEditVisible(false);\n  }; //when click delete\n\n\n  const findIndex = (contacts, contact) => {\n    for (let i = 0; i < contacts.length; i++) {\n      if (contacts[i].id === contact.id) {\n        return i;\n      }\n    }\n  };\n\n  const onClickDelete = contact => {//props.delContact(contact.id);\n  };\n\n  const tablePagination = {// pageSize: paramsContact.limit,\n    // page: paramsContact.offset / paramsContact.limit + 1,\n    // total: paramsContact.total,\n    // pageSizeOptions: [\"5\", \"10\", \"15\", \"20\", \"25\"],\n    // showSizeChanger: true,\n  };\n\n  const handleTableChange = (page, pageSize) => {// let currentPage = {\n    //   current: (page.current - 1) * page.pageSize,\n    //   pageSize: pageSize,\n    // };\n    // fetch(currentPage);\n  };\n\n  const columns = [{\n    title: \"id\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Họ tên\",\n    dataIndex: \"ho_va_ten\",\n    key: \"ho_va_ten\"\n  }, {\n    title: \"Số điện thoại\",\n    dataIndex: \"sdt\",\n    key: \"sdt\"\n  }, {\n    title: \"Giới tính\",\n    dataIndex: \"gender\",\n    key: \"gender\"\n  }, {\n    title: \"Tuổi\",\n    dataIndex: \"age\",\n    key: \"age\"\n  }, {\n    title: \"\",\n    key: \"action\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(EditTwoTone, {\n        className: \"edit-button\",\n        onClick: () => onClickEdit(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteTwoTone, {\n        className: \"delete\",\n        onClick: () => onClickDelete(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }];\n  const data = []; //props.contacts;\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap-table-contacts\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          className: \"searchTxb\",\n          placeholder: \"input search text\",\n          allowClear: true,\n          enterButton: \"Search\",\n          size: \"large\",\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        className: \"addButton\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          size: \"large\",\n          onClick: onClickAdd,\n          children: \"+Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data,\n      pagination: tablePagination,\n      loading: loading,\n      onChange: handleTableChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableContacts, \"bp7W7BLZaxNmS0ceaCBH82+KoGQ=\");\n\n_c = TableContacts;\n\nfunction mapStateToProps(state) {\n  //const contacts = state.contactReducer;\n  return {\n    stateRedux: state\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchContact: () => {\n      dispatch(fetchContactRequest());\n    } // delContact: (id) => {\n    //   dispatch(delContactRequest(id));\n    // }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableContacts);\n\nvar _c;\n\n$RefreshReg$(_c, \"TableContacts\");","map":{"version":3,"sources":["D:/react/redux-app/src/components/TableContacts.js"],"names":["React","useState","useEffect","connect","useSelector","Table","Tag","Space","Button","Input","Row","Col","EditTwoTone","DeleteTwoTone","fetchContactRequest","delContactRequest","TableContacts","props","loading","setLoading","fetchContact","onClickAdd","Search","onSearch","value","onClickEdit","item","getEditUpdate","findIndex","contacts","contact","i","length","id","onClickDelete","tablePagination","handleTableChange","page","pageSize","columns","title","dataIndex","key","render","text","record","data","console","log","mapStateToProps","state","stateRedux","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { Table, Tag, Space, Button, Input, Row, Col } from \"antd\";\r\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\r\nimport { fetchContactRequest, delContactRequest } from \"../actions/contacts\";\r\n\r\nfunction TableContacts(props) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.fetchContact();\r\n  }, []);\r\n\r\n  const onClickAdd = () => {\r\n    //  setAddVisible(true);\r\n  };\r\n  const { Search } = Input;\r\n\r\n  const onSearch = (value) => {\r\n    // if (value !== \"\") {\r\n    //   let listSearch = [];\r\n    //   for (let item of todoItems) {\r\n    //     if (item.title.includes(value)) {\r\n    //       listSearch.push(item);\r\n    //     }\r\n    //   }\r\n    //   setTodo(listSearch);\r\n    // } else {\r\n    //   axios\r\n    //     .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data\")\r\n    //     .then((res) => {\r\n    //       setTodo(res.data);\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.log(err);\r\n    //     });\r\n    // }\r\n  };\r\n  //when click edit\r\n  const onClickEdit = (item) => {\r\n    // setItem(item);\r\n    // setEditVisible(true);\r\n  };\r\n\r\n  const getEditUpdate = (item) => {\r\n    // const index = findIndex(todoItems, item);\r\n    // setTodo([\r\n    //   ...todoItems.slice(0, index),\r\n    //   {\r\n    //     id: item.id,\r\n    //     title: item.title,\r\n    //     isEditing: item.isEditing,\r\n    //     isCompleted: item.isCompleted,\r\n    //   },\r\n    //   ...todoItems.slice(index + 1),\r\n    // ]);\r\n    // setEditVisible(false);\r\n  };\r\n\r\n  //when click delete\r\n  const findIndex = (contacts, contact) => {\r\n    for (let i = 0; i < contacts.length; i++) {\r\n      if (contacts[i].id === contact.id) {\r\n        return i;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickDelete = (contact) => {\r\n    //props.delContact(contact.id);\r\n  };\r\n\r\n  const tablePagination = {\r\n    // pageSize: paramsContact.limit,\r\n    // page: paramsContact.offset / paramsContact.limit + 1,\r\n    // total: paramsContact.total,\r\n    // pageSizeOptions: [\"5\", \"10\", \"15\", \"20\", \"25\"],\r\n    // showSizeChanger: true,\r\n  };\r\n\r\n  const handleTableChange = (page, pageSize) => {\r\n    // let currentPage = {\r\n    //   current: (page.current - 1) * page.pageSize,\r\n    //   pageSize: pageSize,\r\n    // };\r\n    // fetch(currentPage);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Họ tên\",\r\n      dataIndex: \"ho_va_ten\",\r\n      key: \"ho_va_ten\",\r\n    },\r\n    {\r\n      title: \"Số điện thoại\",\r\n      dataIndex: \"sdt\",\r\n      key: \"sdt\",\r\n    },\r\n    {\r\n      title: \"Giới tính\",\r\n      dataIndex: \"gender\",\r\n      key: \"gender\",\r\n    },\r\n    {\r\n      title: \"Tuổi\",\r\n      dataIndex: \"age\",\r\n      key: \"age\",\r\n    },\r\n    {\r\n      title: \"\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <EditTwoTone\r\n            className=\"edit-button\"\r\n            onClick={() => onClickEdit(record)}\r\n          />\r\n          <DeleteTwoTone\r\n            className=\"delete\"\r\n            onClick={() => onClickDelete(record)}\r\n          />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const data = []; //props.contacts;\r\n  console.log(props);\r\n  return (\r\n    <div className=\"wrap-table-contacts\">\r\n      <Row>\r\n        <Col span={6}>\r\n          <Search\r\n            className=\"searchTxb\"\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            enterButton=\"Search\"\r\n            size=\"large\"\r\n            onSearch={onSearch}\r\n          />\r\n        </Col>\r\n        <Col span={6}></Col>\r\n        <Col span={6}></Col>\r\n        <Col span={6} className=\"addButton\">\r\n          <Button type=\"primary\" size=\"large\" onClick={onClickAdd}>\r\n            +Add\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={data}\r\n        pagination={tablePagination}\r\n        loading={loading}\r\n        onChange={handleTableChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  //const contacts = state.contactReducer;\r\n  return {stateRedux: state};\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchContact: () => {\r\n      dispatch(fetchContactRequest());\r\n    },\r\n    // delContact: (id) => {\r\n    //   dispatch(delContactRequest(id));\r\n    // }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableContacts);\r\n"]},"metadata":{},"sourceType":"module"}