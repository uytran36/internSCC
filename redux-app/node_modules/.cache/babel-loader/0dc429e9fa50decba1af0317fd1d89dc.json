{"ast":null,"code":"import * as types from \"../constants/ActionTypes\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nexport const fetchContactRequest = () => {\n  return dispatch => {\n    axios.get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/contact_data\").then(res => {\n      dispatch(fetchContact(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const fetchContact = contacts => {\n  return {\n    type: types.FETCH_CONTACT,\n    contacts\n  };\n};\nexport const delContactRequest = id => {\n  return dispatch => {\n    axios.delete(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/contact_data/\" + id).then(response => {\n      dispatch(delContact(response.data));\n    });\n  };\n};\nexport const delContact = contact => {\n  return {\n    type: types.DELETE_CONTACT,\n    contact\n  };\n};\nexport const addContactRequest = contact => {\n  return dispatch => {\n    axios.post(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/contact_data\", {\n      ho_va_ten: contact.ho_va_ten,\n      sdt: contact.sdt,\n      gender: contact.gender,\n      age: contact.age\n    }).then(res => {\n      dispatch(addContact(contact));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const addContact = contact => {\n  return {\n    type: types.ADD_CONTACT,\n    contact: contact\n  };\n};\nexport const editContactRequest = contact => {\n  return dispatch => {\n    axios.put(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/contact_data/\" + contact.id, {\n      id: contact.id,\n      ho_va_ten: contact.ho_va_ten,\n      sdt: contact.sdt,\n      gender: contact.gender,\n      age: contact.age\n    }).then(res => {\n      dispatch(editContact(contact));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const editContact = contact => {\n  return {\n    type: types.EDIT_CONTACT,\n    contact: contact\n  };\n};\nexport const searchContactFunc = value => {\n  var _s = $RefreshSig$();\n\n  return _s(dispatch => {\n    _s();\n\n    if (value !== \"\") {\n      let listSearch = [];\n      const contacts = useSelector(state => state.contactReducer);\n\n      for (let contact of contacts) {\n        if (contact.ho_va_ten.includes(value)) {\n          listSearch.push(contact);\n        }\n      }\n\n      dispatch(searchContact(listSearch));\n    } else {\n      dispatch(fetchContactRequest());\n    }\n  }, \"FQPRIRb6lwui5Qc8L1TLBY7+JjM=\", false, function () {\n    return [useSelector];\n  });\n};\nexport const searchContact = contacts => {\n  return {\n    type: types.SEARCH_CONTACT,\n    contacts\n  };\n};","map":{"version":3,"sources":["D:/react/redux-app/src/actions/contacts.js"],"names":["types","useSelector","axios","fetchContactRequest","dispatch","get","then","res","fetchContact","data","catch","err","console","log","contacts","type","FETCH_CONTACT","delContactRequest","id","delete","response","delContact","contact","DELETE_CONTACT","addContactRequest","post","ho_va_ten","sdt","gender","age","addContact","ADD_CONTACT","editContactRequest","put","editContact","EDIT_CONTACT","searchContactFunc","value","listSearch","state","contactReducer","includes","push","searchContact","SEARCH_CONTACT"],"mappings":"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","sourcesContent":["import * as types from \"../constants/ActionTypes\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchContactRequest = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/contact_data\")\r\n      .then((res) => {\r\n        dispatch(fetchContact(res.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchContact = (contacts) => {\r\n  return {\r\n    type: types.FETCH_CONTACT,\r\n    contacts,\r\n  };\r\n};\r\n\r\nexport const delContactRequest = (id) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete(\r\n        \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/contact_data/\" + id\r\n      )\r\n      .then((response) => {\r\n        dispatch(delContact(response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const delContact = (contact) => {\r\n  return {\r\n    type: types.DELETE_CONTACT,\r\n    contact,\r\n  };\r\n};\r\n\r\nexport const addContactRequest = (contact) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/contact_data\", {\r\n        ho_va_ten: contact.ho_va_ten,\r\n        sdt: contact.sdt,\r\n        gender: contact.gender,\r\n        age: contact.age,\r\n      })\r\n      .then((res) => {\r\n        dispatch(addContact(contact));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const addContact = (contact) => {\r\n  return {\r\n    type: types.ADD_CONTACT,\r\n    contact: contact,\r\n  };\r\n};\r\n\r\nexport const editContactRequest = (contact) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .put(\r\n        \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/contact_data/\" +\r\n          contact.id,\r\n        {\r\n          id: contact.id,\r\n          ho_va_ten: contact.ho_va_ten,\r\n          sdt: contact.sdt,\r\n          gender: contact.gender,\r\n          age: contact.age,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        dispatch(editContact(contact));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const editContact = (contact) => {\r\n  return {\r\n    type: types.EDIT_CONTACT,\r\n    contact: contact,\r\n  };\r\n};\r\n\r\nexport const searchContactFunc = (value) => {\r\n  return (dispatch) => {\r\n    if (value !== \"\") {\r\n      let listSearch = [];\r\n      const contacts = useSelector((state) => state.contactReducer);\r\n      for (let contact of contacts) {\r\n        if (contact.ho_va_ten.includes(value)) {\r\n          listSearch.push(contact);\r\n        }\r\n      }\r\n      dispatch(searchContact(listSearch));\r\n    } else {\r\n       dispatch(fetchContactRequest());\r\n    }\r\n  };\r\n};\r\n\r\nexport const searchContact = (contacts) => {\r\n  return {\r\n    type: types.SEARCH_CONTACT,\r\n    contacts,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}