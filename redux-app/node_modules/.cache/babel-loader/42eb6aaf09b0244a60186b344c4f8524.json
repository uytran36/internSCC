{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\redux-app\\\\src\\\\components\\\\EditModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, Form, Input } from \"antd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nfunction EditModal(props) {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(props.visible);\n\n  const handleOk = () => {\n    const title = document.getElementById(\"nest-messages_title\").value;\n    const isEditing = document.getElementById(\"nest-messages_isEditing\").value;\n    const isCompleted = document.getElementById(\"nest-messages_isCompleted\").value;\n\n    if (title !== \"\" && (isEditing === \"true\" || isEditing === \"false\") && (isCompleted === \"true\" || isCompleted === \"false\")) {\n      const item = props.todoItem;\n      axios.put(\"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" + item.id, { ...item,\n        title: title,\n        isEditing: isEditing,\n        isCompleted: isCompleted\n      }).then(res => {\n        let temp = props.getEditUpdate;\n        temp(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      setIsModalVisible(false);\n    }\n  };\n\n  const handleCancel = () => {\n    let temp = props.setVisibleFalse;\n    temp();\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Basic Modal\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n        name: \"nest-messages\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"title\",\n          label: \"title\",\n          rules: [{\n            required: true,\n            message: \"Please input your title!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            defaultValue: props.todoItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"isEditing\",\n          label: \"isEditing\",\n          rules: [{\n            required: true,\n            pattern: new RegExp(\"([0-9]\\\\s*)+\"),\n            message: \"please input phone num\"\n          } // ({ getFieldValue }) => ({\n          //   validator(_, value) {\n          //     if (\n          //       getFieldValue(\"isEditing\") === \"true\" ||\n          //       getFieldValue(\"isEditing\") === \"false\"\n          //     ) {\n          //       return Promise.resolve();\n          //     }\n          //     return Promise.reject(\n          //       new Error(\"Please enter true or false\")\n          //     );\n          //   },\n          // }),\n          ],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            defaultValue: props.todoItem.isEditing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"isCompleted\",\n          label: \"isCompleted\",\n          rules: [{\n            required: true\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(_, value) {\n              if (getFieldValue(\"isEditing\") === \"true\" || getFieldValue(\"isEditing\") === \"false\") {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error(\"Please enter true or false!\"));\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            defaultValue: props.todoItem.isCompleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(EditModal, \"DrcNsrbf4ynYw45NSbYmgUzuKI0=\");\n\n_c = EditModal;\nexport default EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["D:/react/redux-app/src/components/EditModal.js"],"names":["React","useState","Modal","Form","Input","axios","layout","labelCol","span","wrapperCol","EditModal","props","isModalVisible","setIsModalVisible","visible","handleOk","title","document","getElementById","value","isEditing","isCompleted","item","todoItem","put","id","then","res","temp","getEditUpdate","data","catch","err","console","log","handleCancel","setVisibleFalse","required","message","pattern","RegExp","getFieldValue","validator","_","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nfunction EditModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(props.visible);\r\n\r\n  const handleOk = () => {\r\n    const title = document.getElementById(\"nest-messages_title\").value;\r\n    const isEditing = document.getElementById(\"nest-messages_isEditing\").value;\r\n    const isCompleted = document.getElementById(\r\n      \"nest-messages_isCompleted\"\r\n    ).value;\r\n\r\n    if (\r\n      title !== \"\" &&\r\n      (isEditing === \"true\" || isEditing === \"false\") &&\r\n      (isCompleted === \"true\" || isCompleted === \"false\")\r\n    ) {\r\n      const item = props.todoItem;\r\n      axios\r\n        .put(\r\n          \"https://60b0f8b91f26610017fff943.mockapi.io/api/v1/todo_data/\" +\r\n            item.id,\r\n          {\r\n            ...item,\r\n            title: title,\r\n            isEditing: isEditing,\r\n            isCompleted: isCompleted,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          let temp = props.getEditUpdate;\r\n          temp(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      setIsModalVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    let temp = props.setVisibleFalse;\r\n    temp();\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Basic Modal\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form {...layout} name=\"nest-messages\">\r\n          <Form.Item\r\n            name=\"title\"\r\n            label=\"title\"\r\n            rules={[{ required: true, message: \"Please input your title!\" }]}\r\n          >\r\n            <Input defaultValue={props.todoItem.title} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"isEditing\"\r\n            label=\"isEditing\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n\r\n                pattern: new RegExp(\"([0-9]\\\\s*)+\"),\r\n                message: \"please input phone num\",\r\n              },\r\n              // ({ getFieldValue }) => ({\r\n              //   validator(_, value) {\r\n              //     if (\r\n              //       getFieldValue(\"isEditing\") === \"true\" ||\r\n              //       getFieldValue(\"isEditing\") === \"false\"\r\n              //     ) {\r\n              //       return Promise.resolve();\r\n              //     }\r\n              //     return Promise.reject(\r\n              //       new Error(\"Please enter true or false\")\r\n              //     );\r\n              //   },\r\n              // }),\r\n            ]}\r\n          >\r\n            <Input defaultValue={props.todoItem.isEditing} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"isCompleted\"\r\n            label=\"isCompleted\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (\r\n                    getFieldValue(\"isEditing\") === \"true\" ||\r\n                    getFieldValue(\"isEditing\") === \"false\"\r\n                  ) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\r\n                    new Error(\"Please enter true or false!\")\r\n                  );\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input defaultValue={props.todoItem.isCompleted} />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditModal;\r\n"]},"metadata":{},"sourceType":"module"}